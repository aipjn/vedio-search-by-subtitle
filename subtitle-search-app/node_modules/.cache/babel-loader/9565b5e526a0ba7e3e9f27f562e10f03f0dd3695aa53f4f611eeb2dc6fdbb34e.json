{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import axios from'axios';// 通用游戏组件 - 被成语接龙和押韵游戏共用\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const GameBase=_ref=>{let{gameType,// 'chain' 或 'rhyme'\nAPI_BASE_URL,apiStatus,formatTime,formatEpisode,fetchNextOptions,// 不同类型游戏的获取下一步函数\nnextOptionsTitle,// 下一步选项的标题文本\ngameStartedTitle// 游戏开始后的标题文本\n}=_ref;// 状态变量\nconst[currentPrompts,setCurrentPrompts]=useState([]);const[loadingPrompts,setLoadingPrompts]=useState(false);const[currentSentence,setCurrentSentence]=useState(null);const[gameStarted,setGameStarted]=useState(false);const[nextOptions,setNextOptions]=useState([]);const[loadingNextOptions,setLoadingNextOptions]=useState(false);const[selectedOption,setSelectedOption]=useState(null);const[isConfirmMode,setIsConfirmMode]=useState(false);const[videoUrl,setVideoUrl]=useState('');const[isVideoLoading,setIsVideoLoading]=useState(false);const[gameLog,setGameLog]=useState([]);const[clipUrls,setClipUrls]=useState([]);const[gameError,setGameError]=useState(null);const[isExportingVideo,setIsExportingVideo]=useState(false);// 获取随机提示句子\nconst fetchRandomPrompts=async()=>{setLoadingPrompts(true);setGameError(null);try{const response=await fetch(`${API_BASE_URL}/api/random_sentences?count=8`);if(!response.ok){throw new Error(`API请求失败: ${response.status}`);}const data=await response.json();if(data&&data.sentences){setCurrentPrompts(data.sentences);}else{setGameError('获取提示句子失败');}}catch(error){console.error('获取提示句子错误:',error);setGameError('无法获取提示句子，请确保API服务正常运行');}finally{setLoadingPrompts(false);}};// 刷新随机提示\nconst refreshRandomPrompts=()=>{if(!loadingPrompts){fetchRandomPrompts();}};// 开始新游戏\nconst startNewGame=()=>{setGameStarted(false);setCurrentSentence(null);setNextOptions([]);setSelectedOption(null);setIsConfirmMode(false);setVideoUrl('');setGameLog([]);setClipUrls([]);setGameError(null);refreshRandomPrompts();};// 生成视频片段\nconst generateVideoClip=async subtitle=>{if(!subtitle)return null;setIsVideoLoading(true);setVideoUrl('');setGameError(null);try{const response=await fetch(`${API_BASE_URL}/api/generate_clip`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({episode:subtitle.episode,start_time:subtitle.start_seconds,end_time:subtitle.end_seconds,context_seconds:2})});if(!response.ok){throw new Error(`API请求失败: ${response.status}`);}const data=await response.json();if(data.success){const fullVideoUrl=data.video_url.startsWith('http')?data.video_url:`${API_BASE_URL}${data.video_url}`;setVideoUrl(fullVideoUrl);return fullVideoUrl;}else{setGameError('生成视频片段失败');return null;}}catch(error){console.error('生成视频片段出错:',error);setGameError('视频服务出现错误，请确保视频文件存在且可访问');return null;}finally{setIsVideoLoading(false);}};// 选择开始句子\nconst selectStartSentence=async sentence=>{setSelectedOption(sentence);setIsConfirmMode(true);const clipUrl=await generateVideoClip(sentence);if(!clipUrl)return;};// 确认选择开始句子\nconst confirmStartSentence=()=>{const sentence=selectedOption;if(!sentence)return;setCurrentSentence(sentence);setGameLog([{...sentence,step:1,clipUrl:videoUrl}]);setClipUrls([...clipUrls,videoUrl]);setGameStarted(true);fetchNextOptions(sentence.text,setNextOptions,setLoadingNextOptions,setGameError);setIsConfirmMode(false);setSelectedOption(null);};// 取消选择\nconst cancelSelection=()=>{setIsConfirmMode(false);setSelectedOption(null);setVideoUrl('');};// 刷新下一步选项\nconst refreshNextOptions=()=>{if(currentSentence&&!loadingNextOptions){fetchNextOptions(currentSentence.text,setNextOptions,setLoadingNextOptions,setGameError);}};// 选择下一个句子\nconst selectNextSentence=async sentence=>{setSelectedOption(sentence);setIsConfirmMode(true);const clipUrl=await generateVideoClip(sentence);if(!clipUrl)return;};// 确认选择下一个句子\nconst confirmNextSentence=()=>{const sentence=selectedOption;if(!sentence)return;setCurrentSentence(sentence);setGameLog([...gameLog,{...sentence,step:gameLog.length+1,clipUrl:videoUrl}]);setClipUrls([...clipUrls,videoUrl]);fetchNextOptions(sentence.text,setNextOptions,setLoadingNextOptions,setGameError);setIsConfirmMode(false);setSelectedOption(null);};// 回到上一步\nconst goBackOneStep=()=>{if(gameLog.length<=1){// 只有一步，回到选择开始句子\nsetGameStarted(false);setGameLog([]);setCurrentSentence(null);setNextOptions([]);setClipUrls([]);return;}// 删除最后一步\nconst newLog=gameLog.slice(0,-1);const newClipUrls=clipUrls.slice(0,-1);setGameLog(newLog);setClipUrls(newClipUrls);setCurrentSentence(newLog[newLog.length-1]);fetchNextOptions(newLog[newLog.length-1].text,setNextOptions,setLoadingNextOptions,setGameError);};// 导出合并视频\nconst exportMergedVideo=async()=>{// 只从gameLog中获取选中的视频URL，而不是使用clipUrls\nconst selectedClipUrls=gameLog.map(entry=>entry.clipUrl).filter(url=>url);if(selectedClipUrls.length===0){setGameError('没有可导出的视频');return;}setIsExportingVideo(true);setGameError(null);try{const response=await fetch(`${API_BASE_URL}/api/merge_clips`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({clip_urls:selectedClipUrls})});if(!response.ok){throw new Error(`API请求失败: ${response.status}`);}const data=await response.json();if(data.success){// 触发下载\nconst a=document.createElement('a');a.href=`${API_BASE_URL}${data.merged_video_url}`;a.download=`甄嬛传${gameType==='chain'?'接龙':'押韵'}.mp4`;document.body.appendChild(a);a.click();document.body.removeChild(a);}else{setGameError('导出视频失败');}}catch(error){console.error('导出视频错误:',error);setGameError('导出视频失败，请确保服务器正常运行');}finally{setIsExportingVideo(false);}};// 初始加载时获取随机提示\nuseEffect(()=>{if(apiStatus==='connected'){fetchRandomPrompts();}},[apiStatus]);return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-options\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startNewGame,className:\"new-game-btn\",children:\"\\u5F00\\u59CB\\u65B0\\u6E38\\u620F\"}),!gameStarted&&/*#__PURE__*/_jsx(\"button\",{onClick:refreshRandomPrompts,disabled:loadingPrompts,className:\"refresh-btn\",children:loadingPrompts?'加载中...':'换一批'}),gameStarted&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:goBackOneStep,className:\"back-btn\",children:\"\\u4E0A\\u4E00\\u6B65\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshNextOptions,disabled:loadingNextOptions,className:\"refresh-btn\",children:\"\\u6362\\u4E00\\u6279\"}),gameLog.length>=2&&/*#__PURE__*/_jsx(\"button\",{onClick:exportMergedVideo,disabled:isExportingVideo,className:\"export-btn\",children:isExportingVideo?'导出中...':'导出视频'})]})]}),gameError&&/*#__PURE__*/_jsx(\"div\",{className:\"game-error\",children:gameError}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"selection-area\",children:!gameStarted?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u9009\\u62E9\\u5F00\\u59CB\\u53E5\\u5B50\"}),loadingPrompts?/*#__PURE__*/_jsx(\"div\",{className:\"loading-prompts\",children:\"\\u52A0\\u8F7D\\u63D0\\u793A\\u53E5\\u5B50\\u4E2D...\"}):currentPrompts.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-prompts\",children:\"\\u6CA1\\u6709\\u53EF\\u7528\\u7684\\u63D0\\u793A\\u53E5\\u5B50\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"prompt-list\",children:currentPrompts.map((prompt,index)=>/*#__PURE__*/_jsx(\"li\",{className:selectedOption===prompt?'selected':'',children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>selectStartSentence(prompt),disabled:isConfirmMode&&selectedOption!==prompt,children:[/*#__PURE__*/_jsx(\"span\",{className:\"episode-tag\",children:formatEpisode(prompt.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"text\",children:prompt.text}),/*#__PURE__*/_jsx(\"span\",{className:\"time-tag\",children:formatTime(prompt.start_seconds)})]})},index))})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:nextOptionsTitle}),loadingNextOptions?/*#__PURE__*/_jsx(\"div\",{className:\"loading-next-options\",children:\"\\u641C\\u7D22\\u4E2D...\"}):nextOptions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-next-options\",children:\"\\u6CA1\\u6709\\u627E\\u5230\\u7B26\\u5408\\u6761\\u4EF6\\u7684\\u53E5\\u5B50\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"next-options-list\",children:nextOptions.map((option,index)=>/*#__PURE__*/_jsx(\"li\",{className:selectedOption===option?'selected':'',children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>selectNextSentence(option),disabled:isConfirmMode&&selectedOption!==option,children:[/*#__PURE__*/_jsx(\"span\",{className:\"episode-tag\",children:formatEpisode(option.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"text\",children:option.text}),/*#__PURE__*/_jsx(\"span\",{className:\"time-tag\",children:formatTime(option.start_seconds)})]})},index))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"video-display\",children:[/*#__PURE__*/_jsx(\"h3\",{children:gameStarted?gameStartedTitle:'已选择的句子'}),isVideoLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-video\",children:\"\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):videoUrl?/*#__PURE__*/_jsx(\"video\",{controls:true,autoPlay:true,className:\"video-element\",src:videoUrl}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder\",children:selectedOption?'准备生成视频片段...':'请从左侧选择一个句子'}),isConfirmMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"confirm-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:gameStarted?confirmNextSentence:confirmStartSentence,className:\"confirm-btn\",children:\"\\u786E\\u8BA4\\u9009\\u62E9\"}),/*#__PURE__*/_jsx(\"button\",{onClick:cancelSelection,className:\"cancel-btn\",children:\"\\u53D6\\u6D88\"})]})]})]}),gameStarted&&gameLog.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-log\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u6E38\\u620F\\u8BB0\\u5F55\"}),/*#__PURE__*/_jsx(\"ol\",{className:\"log-list\",children:gameLog.map((entry,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"step-number\",children:[\"#\",entry.step]}),/*#__PURE__*/_jsx(\"span\",{className:\"episode-tag\",children:formatEpisode(entry.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"text\",children:entry.text}),/*#__PURE__*/_jsx(\"span\",{className:\"time-tag\",children:formatTime(entry.start_seconds)})]},index))})]})]});};// 成语接龙组件\nconst ChainGamePage=_ref2=>{let{API_BASE_URL,apiStatus,formatTime,formatEpisode}=_ref2;// 获取最后一个有效字符（排除语气词）\nconst getLastValidChar=text=>{if(!text||text.length===0)return null;// 排除常见语气词\nconst cleanText=text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/,'');return cleanText.length>0?cleanText[cleanText.length-1]:null;};// 获取下一步选项 - 成语接龙版本\nconst fetchChainNextOptions=async(text,setNextOptions,setLoadingNextOptions,setGameError)=>{if(!text)return;setLoadingNextOptions(true);setGameError(null);try{// 获取最后一个字，排除语气词\nlet lastChar=getLastValidChar(text);if(!lastChar){setGameError('无法识别有效的结尾字符');setLoadingNextOptions(false);return;}console.log(`正在查找以\"${lastChar}\"开头的句子...`);const response=await fetch(`${API_BASE_URL}/api/search?query=${encodeURIComponent(`^${lastChar}`)}&use_regex=true`);if(!response.ok){throw new Error(`API请求失败: ${response.status}`);}const data=await response.json();if(data&&data.results){console.log(`API返回了 ${data.results.length} 条结果`);// 过滤结果，保留3-8个字的句子\nconst filteredResults=data.results.filter(item=>{const cleanText=item.text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/,'');return cleanText.length>=3&&cleanText.length<=8;});console.log(`过滤后还有 ${filteredResults.length} 条结果`);if(filteredResults.length===0){// 如果没有找到结果，尝试不使用正则表达式的精确查询\nconsole.log(`尝试使用精确查询搜索以\"${lastChar}\"开头的句子`);const fallbackResponse=await fetch(`${API_BASE_URL}/api/search?query=${encodeURIComponent(lastChar)}`);const fallbackData=await fallbackResponse.json();if(fallbackData&&fallbackData.results){console.log(`精确查询返回了 ${fallbackData.results.length} 条结果`);// 手动过滤以lastChar开头的结果\nconst manualFilteredResults=fallbackData.results.filter(item=>{return item.text.startsWith(lastChar)&&item.text.length>=3&&item.text.length<=8;});if(manualFilteredResults.length>0){console.log(`手动过滤后找到 ${manualFilteredResults.length} 条结果`);// 随机选择最多8个结果\nconst shuffled=[...manualFilteredResults].sort(()=>0.5-Math.random());setNextOptions(shuffled.slice(0,8));setLoadingNextOptions(false);return;}}setGameError(`没有找到以\"${lastChar}\"开头的句子`);}else{// 随机选择最多8个结果\nconst shuffled=[...filteredResults].sort(()=>0.5-Math.random());setNextOptions(shuffled.slice(0,8));}}else{setGameError('获取接续句子失败');}}catch(error){console.error('获取接续句子错误:',error);setGameError(`查询错误: ${error.message}`);}finally{setLoadingNextOptions(false);}};return/*#__PURE__*/_jsx(GameBase,{gameType:\"chain\",API_BASE_URL:API_BASE_URL,apiStatus:apiStatus,formatTime:formatTime,formatEpisode:formatEpisode,fetchNextOptions:fetchChainNextOptions,nextOptionsTitle:\"\\u9009\\u62E9\\u4E0B\\u4E00\\u53E5\\u8BDD\\uFF08\\u4EE5\\u4E0A\\u4E00\\u53E5\\u7ED3\\u5C3E\\u5B57\\u5F00\\u5934\\uFF09\",gameStartedTitle:\"\\u63A5\\u9F99\\u8FDB\\u884C\\u4E2D\"});};// 押韵游戏组件\nconst RhymeGamePage=_ref3=>{let{API_BASE_URL,apiStatus,formatTime,formatEpisode}=_ref3;// 获取下一步选项 - 押韵版本\nconst fetchRhymeNextOptions=async(text,setNextOptions,setLoadingNextOptions,setGameError)=>{if(!text)return;setLoadingNextOptions(true);setGameError(null);try{console.log(`正在查找与\"${text}\"押韵的句子...`);const response=await fetch(`${API_BASE_URL}/api/rhyming_sentences?text=${encodeURIComponent(text)}`);if(!response.ok){throw new Error(`API请求失败: ${response.status}`);}const data=await response.json();if(data.error){setGameError(data.error);setLoadingNextOptions(false);return;}if(data&&data.sentences){console.log(`API返回了 ${data.count} 条押韵结果，韵母是: ${data.rhyme}`);if(data.count===0){setGameError(`没有找到与\"${text}\"押韵的句子`);}else{// 随机选择最多8个结果\nconst shuffled=[...data.sentences].sort(()=>0.5-Math.random());setNextOptions(shuffled.slice(0,8));}}else{setGameError('获取押韵句子失败');}}catch(error){console.error('获取押韵句子错误:',error);setGameError(`查询错误: ${error.message}`);}finally{setLoadingNextOptions(false);}};return/*#__PURE__*/_jsx(GameBase,{gameType:\"rhyme\",API_BASE_URL:API_BASE_URL,apiStatus:apiStatus,formatTime:formatTime,formatEpisode:formatEpisode,fetchNextOptions:fetchRhymeNextOptions,nextOptionsTitle:\"\\u9009\\u62E9\\u4E0B\\u4E00\\u53E5\\u8BDD\\uFF08\\u4E0E\\u4E0A\\u4E00\\u53E5\\u97F5\\u811A\\u62BC\\u97F5\\uFF09\",gameStartedTitle:\"\\u62BC\\u97F5\\u6E38\\u620F\\u8FDB\\u884C\\u4E2D\"});};// 子页面组件\nconst SearchPage=_ref4=>{let{API_BASE_URL,query,setQuery,searchResults,setSearchResults,loading,setLoading,apiStatus,error,setError,selectedResult,setSelectedResult,videoUrl,setVideoUrl,isVideoLoading,setIsVideoLoading,handleSearch,handleGenerateClip,formatTime,formatEpisode,highlightText}=_ref4;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"search-area\",children:[/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSearch,children:/*#__PURE__*/_jsxs(\"div\",{className:\"search-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:query,onChange:e=>setQuery(e.target.value),placeholder:\"\\u8F93\\u5165\\u8981\\u641C\\u7D22\\u7684\\u5B57\\u5E55\\u5185\\u5BB9...\",disabled:apiStatus!=='connected'}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading||apiStatus!=='connected',children:loading?'搜索中...':'搜索'})]})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content-area\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"results-area\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\u641C\\u7D22\\u7ED3\\u679C \",searchResults.length>0&&`(${searchResults.length})`]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u641C\\u7D22\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"results-list\",children:searchResults.map((result,index)=>/*#__PURE__*/_jsxs(\"li\",{className:selectedResult===result?'selected':'',onClick:()=>handleGenerateClip(result),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(result.episode)}),/*#__PURE__*/_jsxs(\"span\",{className:\"time\",children:[formatTime(result.start_seconds),\" - \",formatTime(result.end_seconds)]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"subtitle-text\",dangerouslySetInnerHTML:{__html:highlightText(result.text,query)}})]},index))})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"video-area\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u89C6\\u9891\\u64AD\\u653E\"}),selectedResult?/*#__PURE__*/_jsxs(\"div\",{className:\"video-player\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"video-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u96C6\\u6570:\"}),\" \",formatEpisode(selectedResult.episode)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u65F6\\u95F4\\u6BB5:\"}),\" \",formatTime(selectedResult.start_seconds),\" - \",formatTime(selectedResult.end_seconds)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5B57\\u5E55\\u5185\\u5BB9:\"}),\" \",selectedResult.text]})]}),isVideoLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-video\",children:\"\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):videoUrl?/*#__PURE__*/_jsx(\"video\",{controls:true,autoPlay:true,className:\"video-element\",src:videoUrl}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder\",children:selectedResult?'准备生成视频片段...':'请从左侧选择一个搜索结果'})]}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder\",children:\"\\u8BF7\\u4ECE\\u5DE6\\u4FA7\\u9009\\u62E9\\u4E00\\u4E2A\\u641C\\u7D22\\u7ED3\\u679C\"})]})]})]});};function App(){const[query,setQuery]=useState('');const[results,setResults]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[selectedResult,setSelectedResult]=useState(null);const[videoUrl,setVideoUrl]=useState('');const[apiStatus,setApiStatus]=useState({loading:true,error:null,data:null});const[activePage,setActivePage]=useState('search');// 'search', 'chain-game' 或 'rhyme-game'\n// API 相关配置\nconst API_BASE_URL='http://localhost:8089';// 检查API状态\nuseEffect(()=>{const checkApiStatus=async()=>{try{const response=await fetch(`${API_BASE_URL}/api/status`);if(response.ok){const data=await response.json();setApiStatus({loading:false,error:null,data});console.log(\"API状态:\",data);}else{setApiStatus({loading:false,error:'无法连接到API服务',data:null});}}catch(error){console.error(\"API连接错误:\",error);setApiStatus({loading:false,error:'无法连接到API服务',data:null});}};checkApiStatus();},[]);const handleSearch=async e=>{e.preventDefault();if(!query.trim()){setError('请输入搜索内容');return;}setLoading(true);setError('');setResults([]);setSelectedResult(null);setVideoUrl('');try{// 构建查询URL\nconst queryParams=new URLSearchParams({query:query.trim()}).toString();const response=await fetch(`${API_BASE_URL}/api/search?${queryParams}`);if(response.ok){const data=await response.json();setResults(data.results||[]);if(data.results&&data.results.length===0){setError('没有找到匹配的结果');}}else{const errorData=await response.json();setError(errorData.error||'搜索失败');}}catch(error){console.error('搜索失败:',error);setError('搜索请求失败，请检查网络连接');}finally{setLoading(false);}};const handleGenerateClip=async result=>{if(!result)return;setSelectedResult(result);setLoading(true);setError('');setVideoUrl('');try{const response=await fetch(`${API_BASE_URL}/api/generate_clip`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({episode:result.episode,start_time:result.start_seconds,end_time:result.end_seconds,context_seconds:3// 上下文秒数\n})});if(response.ok){const data=await response.json();if(data.success){// 确保视频URL包含完整的基础URL\nconst fullVideoUrl=data.video_url.startsWith('http')?data.video_url:`${API_BASE_URL}${data.video_url}`;setVideoUrl(fullVideoUrl);}else{setError(data.error||'视频片段生成失败');}}else{const errorData=await response.json();setError(errorData.error||'请求失败');}}catch(error){console.error('生成视频片段失败:',error);setError('请求失败，请检查网络连接');}finally{setLoading(false);}};// 格式化时间\nconst formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=Math.floor(seconds%60);return`${mins}:${secs<10?'0':''}${secs}`;};// 格式化集数\nconst formatEpisode=episode=>{return`第${episode.match(/\\d+/)[0]}集`;};// 高亮显示匹配文本\nconst highlightText=(text,query)=>{if(!query||!text)return text;try{const regex=new RegExp(query,'gi');return text.replace(regex,match=>`<mark>${match}</mark>`);}catch(e){return text;}};// 切换页面\nconst switchPage=page=>{setActivePage(page);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u300A\\u540E\\u5BAB\\xB7\\u7504\\u5B1B\\u4F20\\u300B\\u5B57\\u5E55\\u641C\\u7D22\\u7CFB\\u7EDF\"}),apiStatus.loading&&/*#__PURE__*/_jsx(\"p\",{className:\"api-status checking\",children:\"\\u68C0\\u67E5API\\u8FDE\\u63A5\\u4E2D...\"}),apiStatus.error&&/*#__PURE__*/_jsx(\"p\",{className:\"api-status error\",children:\"\\u65E0\\u6CD5\\u8FDE\\u63A5\\u5230API\\u670D\\u52A1\\uFF0C\\u8BF7\\u786E\\u4FDD\\u540E\\u7AEF\\u670D\\u52A1\\u5DF2\\u542F\\u52A8\"}),apiStatus.data&&/*#__PURE__*/_jsxs(\"p\",{className:\"api-status connected\",children:[\"API\\u670D\\u52A1\\u5DF2\\u8FDE\\u63A5 (\\u5DF2\\u52A0\\u8F7D \",apiStatus.data.loaded_episodes,\" \\u96C6, \",apiStatus.data.total_subtitles,\" \\u6761\\u5B57\\u5E55)\"]}),/*#__PURE__*/_jsx(\"nav\",{className:\"main-nav\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:activePage==='search'?'active':'',children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>switchPage('search'),children:\"\\u5B57\\u5E55\\u641C\\u7D22\"})}),/*#__PURE__*/_jsx(\"li\",{className:activePage==='chain-game'?'active':'',children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>switchPage('chain-game'),children:\"\\u6210\\u8BED\\u63A5\\u9F99\"})}),/*#__PURE__*/_jsx(\"li\",{className:activePage==='rhyme-game'?'active':'',children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>switchPage('rhyme-game'),children:\"\\u62BC\\u97F5\\u6E38\\u620F\"})})]})})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"App-main\",children:[activePage==='search'&&/*#__PURE__*/_jsx(SearchPage,{API_BASE_URL:API_BASE_URL,query:query,setQuery:setQuery,searchResults:results,setSearchResults:setResults,loading:loading,setLoading:setLoading,apiStatus:apiStatus.data?'connected':'error',error:error,setError:setError,selectedResult:selectedResult,setSelectedResult:setSelectedResult,videoUrl:videoUrl,setVideoUrl:setVideoUrl,isVideoLoading:loading,setIsVideoLoading:setLoading,handleSearch:handleSearch,handleGenerateClip:handleGenerateClip,formatTime:formatTime,formatEpisode:formatEpisode,highlightText:highlightText}),activePage==='chain-game'&&/*#__PURE__*/_jsx(ChainGamePage,{API_BASE_URL:API_BASE_URL,apiStatus:apiStatus.data?'connected':'error',formatTime:formatTime,formatEpisode:formatEpisode}),activePage==='rhyme-game'&&/*#__PURE__*/_jsx(RhymeGamePage,{API_BASE_URL:API_BASE_URL,apiStatus:apiStatus.data?'connected':'error',formatTime:formatTime,formatEpisode:formatEpisode})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"App-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\xA9 2025 \\u7504\\u5B1B\\u4F20\\u5B57\\u5E55\\u641C\\u7D22\\u7CFB\\u7EDF\"})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","GameBase","_ref","gameType","API_BASE_URL","apiStatus","formatTime","formatEpisode","fetchNextOptions","nextOptionsTitle","gameStartedTitle","currentPrompts","setCurrentPrompts","loadingPrompts","setLoadingPrompts","currentSentence","setCurrentSentence","gameStarted","setGameStarted","nextOptions","setNextOptions","loadingNextOptions","setLoadingNextOptions","selectedOption","setSelectedOption","isConfirmMode","setIsConfirmMode","videoUrl","setVideoUrl","isVideoLoading","setIsVideoLoading","gameLog","setGameLog","clipUrls","setClipUrls","gameError","setGameError","isExportingVideo","setIsExportingVideo","fetchRandomPrompts","response","fetch","ok","Error","status","data","json","sentences","error","console","refreshRandomPrompts","startNewGame","generateVideoClip","subtitle","method","headers","body","JSON","stringify","episode","start_time","start_seconds","end_time","end_seconds","context_seconds","success","fullVideoUrl","video_url","startsWith","selectStartSentence","sentence","clipUrl","confirmStartSentence","step","text","cancelSelection","refreshNextOptions","selectNextSentence","confirmNextSentence","length","goBackOneStep","newLog","slice","newClipUrls","exportMergedVideo","selectedClipUrls","map","entry","filter","url","clip_urls","a","document","createElement","href","merged_video_url","download","appendChild","click","removeChild","className","children","onClick","disabled","prompt","index","option","controls","autoPlay","src","ChainGamePage","_ref2","getLastValidChar","cleanText","replace","fetchChainNextOptions","lastChar","log","encodeURIComponent","results","filteredResults","item","fallbackResponse","fallbackData","manualFilteredResults","shuffled","sort","Math","random","message","RhymeGamePage","_ref3","fetchRhymeNextOptions","count","rhyme","SearchPage","_ref4","query","setQuery","searchResults","setSearchResults","loading","setLoading","setError","selectedResult","setSelectedResult","handleSearch","handleGenerateClip","highlightText","onSubmit","type","value","onChange","e","target","placeholder","result","dangerouslySetInnerHTML","__html","App","setResults","setApiStatus","activePage","setActivePage","checkApiStatus","preventDefault","trim","queryParams","URLSearchParams","toString","errorData","seconds","mins","floor","secs","match","regex","RegExp","switchPage","page","loaded_episodes","total_subtitles"],"sources":["/Users/h0270/Documents/code/ai-vedio/create_video/subtitle-search-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n// 通用游戏组件 - 被成语接龙和押韵游戏共用\nconst GameBase = ({ \n  gameType,        // 'chain' 或 'rhyme'\n  API_BASE_URL, \n  apiStatus,\n  formatTime,\n  formatEpisode,\n  fetchNextOptions,  // 不同类型游戏的获取下一步函数\n  nextOptionsTitle,  // 下一步选项的标题文本\n  gameStartedTitle   // 游戏开始后的标题文本\n}) => {\n  // 状态变量\n  const [currentPrompts, setCurrentPrompts] = useState([]);\n  const [loadingPrompts, setLoadingPrompts] = useState(false);\n  const [currentSentence, setCurrentSentence] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [nextOptions, setNextOptions] = useState([]);\n  const [loadingNextOptions, setLoadingNextOptions] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isConfirmMode, setIsConfirmMode] = useState(false);\n  const [videoUrl, setVideoUrl] = useState('');\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n  const [gameLog, setGameLog] = useState([]);\n  const [clipUrls, setClipUrls] = useState([]);\n  const [gameError, setGameError] = useState(null);\n  const [isExportingVideo, setIsExportingVideo] = useState(false);\n  \n  // 获取随机提示句子\n  const fetchRandomPrompts = async () => {\n    setLoadingPrompts(true);\n    setGameError(null);\n    \n    try {\n      const response = await fetch(`${API_BASE_URL}/api/random_sentences?count=8`);\n      \n      if (!response.ok) {\n        throw new Error(`API请求失败: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data && data.sentences) {\n        setCurrentPrompts(data.sentences);\n      } else {\n        setGameError('获取提示句子失败');\n      }\n    } catch (error) {\n      console.error('获取提示句子错误:', error);\n      setGameError('无法获取提示句子，请确保API服务正常运行');\n    } finally {\n      setLoadingPrompts(false);\n    }\n  };\n  \n  // 刷新随机提示\n  const refreshRandomPrompts = () => {\n    if (!loadingPrompts) {\n      fetchRandomPrompts();\n    }\n  };\n  \n  // 开始新游戏\n  const startNewGame = () => {\n    setGameStarted(false);\n    setCurrentSentence(null);\n    setNextOptions([]);\n    setSelectedOption(null);\n    setIsConfirmMode(false);\n    setVideoUrl('');\n    setGameLog([]);\n    setClipUrls([]);\n    setGameError(null);\n    refreshRandomPrompts();\n  };\n  \n  // 生成视频片段\n  const generateVideoClip = async (subtitle) => {\n    if (!subtitle) return null;\n    \n    setIsVideoLoading(true);\n    setVideoUrl('');\n    setGameError(null);\n    \n    try {\n      const response = await fetch(`${API_BASE_URL}/api/generate_clip`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          episode: subtitle.episode,\n          start_time: subtitle.start_seconds,\n          end_time: subtitle.end_seconds,\n          context_seconds: 2\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`API请求失败: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        const fullVideoUrl = data.video_url.startsWith('http') \n          ? data.video_url \n          : `${API_BASE_URL}${data.video_url}`;\n        setVideoUrl(fullVideoUrl);\n        return fullVideoUrl;\n      } else {\n        setGameError('生成视频片段失败');\n        return null;\n      }\n    } catch (error) {\n      console.error('生成视频片段出错:', error);\n      setGameError('视频服务出现错误，请确保视频文件存在且可访问');\n      return null;\n    } finally {\n      setIsVideoLoading(false);\n    }\n  };\n  \n  // 选择开始句子\n  const selectStartSentence = async (sentence) => {\n    setSelectedOption(sentence);\n    setIsConfirmMode(true);\n    \n    const clipUrl = await generateVideoClip(sentence);\n    if (!clipUrl) return;\n  };\n  \n  // 确认选择开始句子\n  const confirmStartSentence = () => {\n    const sentence = selectedOption;\n    if (!sentence) return;\n    \n    setCurrentSentence(sentence);\n    setGameLog([{...sentence, step: 1, clipUrl: videoUrl}]);\n    setClipUrls([...clipUrls, videoUrl]);\n    setGameStarted(true);\n    fetchNextOptions(sentence.text, setNextOptions, setLoadingNextOptions, setGameError);\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n  };\n  \n  // 取消选择\n  const cancelSelection = () => {\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n    setVideoUrl('');\n  };\n  \n  // 刷新下一步选项\n  const refreshNextOptions = () => {\n    if (currentSentence && !loadingNextOptions) {\n      fetchNextOptions(currentSentence.text, setNextOptions, setLoadingNextOptions, setGameError);\n    }\n  };\n  \n  // 选择下一个句子\n  const selectNextSentence = async (sentence) => {\n    setSelectedOption(sentence);\n    setIsConfirmMode(true);\n    \n    const clipUrl = await generateVideoClip(sentence);\n    if (!clipUrl) return;\n  };\n  \n  // 确认选择下一个句子\n  const confirmNextSentence = () => {\n    const sentence = selectedOption;\n    if (!sentence) return;\n    \n    setCurrentSentence(sentence);\n    setGameLog([...gameLog, {...sentence, step: gameLog.length + 1, clipUrl: videoUrl}]);\n    setClipUrls([...clipUrls, videoUrl]);\n    fetchNextOptions(sentence.text, setNextOptions, setLoadingNextOptions, setGameError);\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n  };\n  \n  // 回到上一步\n  const goBackOneStep = () => {\n    if (gameLog.length <= 1) {\n      // 只有一步，回到选择开始句子\n      setGameStarted(false);\n      setGameLog([]);\n      setCurrentSentence(null);\n      setNextOptions([]);\n      setClipUrls([]);\n      return;\n    }\n    \n    // 删除最后一步\n    const newLog = gameLog.slice(0, -1);\n    const newClipUrls = clipUrls.slice(0, -1);\n    setGameLog(newLog);\n    setClipUrls(newClipUrls);\n    setCurrentSentence(newLog[newLog.length - 1]);\n    fetchNextOptions(newLog[newLog.length - 1].text, setNextOptions, setLoadingNextOptions, setGameError);\n  };\n  \n  // 导出合并视频\n  const exportMergedVideo = async () => {\n    // 只从gameLog中获取选中的视频URL，而不是使用clipUrls\n    const selectedClipUrls = gameLog.map(entry => entry.clipUrl).filter(url => url);\n    \n    if (selectedClipUrls.length === 0) {\n      setGameError('没有可导出的视频');\n      return;\n    }\n    \n    setIsExportingVideo(true);\n    setGameError(null);\n    \n    try {\n      const response = await fetch(`${API_BASE_URL}/api/merge_clips`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          clip_urls: selectedClipUrls\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`API请求失败: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        // 触发下载\n        const a = document.createElement('a');\n        a.href = `${API_BASE_URL}${data.merged_video_url}`;\n        a.download = `甄嬛传${gameType === 'chain' ? '接龙' : '押韵'}.mp4`;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      } else {\n        setGameError('导出视频失败');\n      }\n    } catch (error) {\n      console.error('导出视频错误:', error);\n      setGameError('导出视频失败，请确保服务器正常运行');\n    } finally {\n      setIsExportingVideo(false);\n    }\n  };\n  \n  // 初始加载时获取随机提示\n  useEffect(() => {\n    if (apiStatus === 'connected') {\n      fetchRandomPrompts();\n    }\n  }, [apiStatus]);\n  \n  return (\n    <div className=\"game-container\">\n      <div className=\"game-options\">\n        <button onClick={startNewGame} className=\"new-game-btn\">\n          开始新游戏\n        </button>\n        \n        {!gameStarted && (\n          <button onClick={refreshRandomPrompts} disabled={loadingPrompts} className=\"refresh-btn\">\n            {loadingPrompts ? '加载中...' : '换一批'}\n          </button>\n        )}\n        \n        {gameStarted && (\n          <>\n            <button onClick={goBackOneStep} className=\"back-btn\">\n              上一步\n            </button>\n            <button onClick={refreshNextOptions} disabled={loadingNextOptions} className=\"refresh-btn\">\n              换一批\n            </button>\n            {gameLog.length >= 2 && (\n              <button onClick={exportMergedVideo} disabled={isExportingVideo} className=\"export-btn\">\n                {isExportingVideo ? '导出中...' : '导出视频'}\n              </button>\n            )}\n          </>\n        )}\n      </div>\n      \n      {gameError && <div className=\"game-error\">{gameError}</div>}\n      \n      <div className=\"game-content\">\n        <div className=\"selection-area\">\n          {!gameStarted ? (\n            <>\n              <h3>选择开始句子</h3>\n              {loadingPrompts ? (\n                <div className=\"loading-prompts\">加载提示句子中...</div>\n              ) : currentPrompts.length === 0 ? (\n                <div className=\"no-prompts\">没有可用的提示句子</div>\n              ) : (\n                <ul className=\"prompt-list\">\n                  {currentPrompts.map((prompt, index) => (\n                    <li key={index} className={selectedOption === prompt ? 'selected' : ''}>\n                      <button onClick={() => selectStartSentence(prompt)} disabled={isConfirmMode && selectedOption !== prompt}>\n                        <span className=\"episode-tag\">{formatEpisode(prompt.episode)}</span>\n                        <span className=\"text\">{prompt.text}</span>\n                        <span className=\"time-tag\">{formatTime(prompt.start_seconds)}</span>\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </>\n          ) : (\n            <>\n              <h3>{nextOptionsTitle}</h3>\n              {loadingNextOptions ? (\n                <div className=\"loading-next-options\">搜索中...</div>\n              ) : nextOptions.length === 0 ? (\n                <div className=\"no-next-options\">没有找到符合条件的句子</div>\n              ) : (\n                <ul className=\"next-options-list\">\n                  {nextOptions.map((option, index) => (\n                    <li key={index} className={selectedOption === option ? 'selected' : ''}>\n                      <button onClick={() => selectNextSentence(option)} disabled={isConfirmMode && selectedOption !== option}>\n                        <span className=\"episode-tag\">{formatEpisode(option.episode)}</span>\n                        <span className=\"text\">{option.text}</span>\n                        <span className=\"time-tag\">{formatTime(option.start_seconds)}</span>\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </>\n          )}\n        </div>\n        \n        <div className=\"video-display\">\n          <h3>{gameStarted ? gameStartedTitle : '已选择的句子'}</h3>\n          {isVideoLoading ? (\n            <div className=\"loading-video\">生成视频片段中，请稍候...</div>\n          ) : videoUrl ? (\n            <video \n              controls \n              autoPlay \n              className=\"video-element\"\n              src={videoUrl}\n            />\n          ) : (\n            <div className=\"video-placeholder\">\n              {selectedOption ? '准备生成视频片段...' : '请从左侧选择一个句子'}\n            </div>\n          )}\n          \n          {isConfirmMode && (\n            <div className=\"confirm-buttons\">\n              <button onClick={gameStarted ? confirmNextSentence : confirmStartSentence} className=\"confirm-btn\">\n                确认选择\n              </button>\n              <button onClick={cancelSelection} className=\"cancel-btn\">\n                取消\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {gameStarted && gameLog.length > 0 && (\n        <div className=\"game-log\">\n          <h3>游戏记录</h3>\n          <ol className=\"log-list\">\n            {gameLog.map((entry, index) => (\n              <li key={index}>\n                <span className=\"step-number\">#{entry.step}</span>\n                <span className=\"episode-tag\">{formatEpisode(entry.episode)}</span>\n                <span className=\"text\">{entry.text}</span>\n                <span className=\"time-tag\">{formatTime(entry.start_seconds)}</span>\n              </li>\n            ))}\n          </ol>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// 成语接龙组件\nconst ChainGamePage = ({ API_BASE_URL, apiStatus, formatTime, formatEpisode }) => {\n  // 获取最后一个有效字符（排除语气词）\n  const getLastValidChar = (text) => {\n    if (!text || text.length === 0) return null;\n    \n    // 排除常见语气词\n    const cleanText = text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/, '');\n    return cleanText.length > 0 ? cleanText[cleanText.length - 1] : null;\n  };\n  \n  // 获取下一步选项 - 成语接龙版本\n  const fetchChainNextOptions = async (text, setNextOptions, setLoadingNextOptions, setGameError) => {\n    if (!text) return;\n    \n    setLoadingNextOptions(true);\n    setGameError(null);\n    \n    try {\n      // 获取最后一个字，排除语气词\n      let lastChar = getLastValidChar(text);\n      \n      if (!lastChar) {\n        setGameError('无法识别有效的结尾字符');\n        setLoadingNextOptions(false);\n        return;\n      }\n      \n      console.log(`正在查找以\"${lastChar}\"开头的句子...`);\n      \n      const response = await fetch(`${API_BASE_URL}/api/search?query=${encodeURIComponent(`^${lastChar}`)}&use_regex=true`);\n      \n      if (!response.ok) {\n        throw new Error(`API请求失败: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data && data.results) {\n        console.log(`API返回了 ${data.results.length} 条结果`);\n        \n        // 过滤结果，保留3-8个字的句子\n        const filteredResults = data.results.filter(item => {\n          const cleanText = item.text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/, '');\n          return cleanText.length >= 3 && cleanText.length <= 8;\n        });\n        \n        console.log(`过滤后还有 ${filteredResults.length} 条结果`);\n        \n        if (filteredResults.length === 0) {\n          // 如果没有找到结果，尝试不使用正则表达式的精确查询\n          console.log(`尝试使用精确查询搜索以\"${lastChar}\"开头的句子`);\n          const fallbackResponse = await fetch(`${API_BASE_URL}/api/search?query=${encodeURIComponent(lastChar)}`);\n          const fallbackData = await fallbackResponse.json();\n          \n          if (fallbackData && fallbackData.results) {\n            console.log(`精确查询返回了 ${fallbackData.results.length} 条结果`);\n            // 手动过滤以lastChar开头的结果\n            const manualFilteredResults = fallbackData.results.filter(item => {\n              return item.text.startsWith(lastChar) && \n                     item.text.length >= 3 && \n                     item.text.length <= 8;\n            });\n            \n            if (manualFilteredResults.length > 0) {\n              console.log(`手动过滤后找到 ${manualFilteredResults.length} 条结果`);\n              // 随机选择最多8个结果\n              const shuffled = [...manualFilteredResults].sort(() => 0.5 - Math.random());\n              setNextOptions(shuffled.slice(0, 8));\n              setLoadingNextOptions(false);\n              return;\n            }\n          }\n          \n          setGameError(`没有找到以\"${lastChar}\"开头的句子`);\n        } else {\n          // 随机选择最多8个结果\n          const shuffled = [...filteredResults].sort(() => 0.5 - Math.random());\n          setNextOptions(shuffled.slice(0, 8));\n        }\n      } else {\n        setGameError('获取接续句子失败');\n      }\n    } catch (error) {\n      console.error('获取接续句子错误:', error);\n      setGameError(`查询错误: ${error.message}`);\n    } finally {\n      setLoadingNextOptions(false);\n    }\n  };\n  \n  return (\n    <GameBase\n      gameType=\"chain\"\n      API_BASE_URL={API_BASE_URL}\n      apiStatus={apiStatus}\n      formatTime={formatTime}\n      formatEpisode={formatEpisode}\n      fetchNextOptions={fetchChainNextOptions}\n      nextOptionsTitle=\"选择下一句话（以上一句结尾字开头）\"\n      gameStartedTitle=\"接龙进行中\"\n    />\n  );\n};\n\n// 押韵游戏组件\nconst RhymeGamePage = ({ API_BASE_URL, apiStatus, formatTime, formatEpisode }) => {\n  // 获取下一步选项 - 押韵版本\n  const fetchRhymeNextOptions = async (text, setNextOptions, setLoadingNextOptions, setGameError) => {\n    if (!text) return;\n    \n    setLoadingNextOptions(true);\n    setGameError(null);\n    \n    try {\n      console.log(`正在查找与\"${text}\"押韵的句子...`);\n      \n      const response = await fetch(`${API_BASE_URL}/api/rhyming_sentences?text=${encodeURIComponent(text)}`);\n      \n      if (!response.ok) {\n        throw new Error(`API请求失败: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.error) {\n        setGameError(data.error);\n        setLoadingNextOptions(false);\n        return;\n      }\n      \n      if (data && data.sentences) {\n        console.log(`API返回了 ${data.count} 条押韵结果，韵母是: ${data.rhyme}`);\n        \n        if (data.count === 0) {\n          setGameError(`没有找到与\"${text}\"押韵的句子`);\n        } else {\n          // 随机选择最多8个结果\n          const shuffled = [...data.sentences].sort(() => 0.5 - Math.random());\n          setNextOptions(shuffled.slice(0, 8));\n        }\n      } else {\n        setGameError('获取押韵句子失败');\n      }\n    } catch (error) {\n      console.error('获取押韵句子错误:', error);\n      setGameError(`查询错误: ${error.message}`);\n    } finally {\n      setLoadingNextOptions(false);\n    }\n  };\n  \n  return (\n    <GameBase\n      gameType=\"rhyme\"\n      API_BASE_URL={API_BASE_URL}\n      apiStatus={apiStatus}\n      formatTime={formatTime}\n      formatEpisode={formatEpisode}\n      fetchNextOptions={fetchRhymeNextOptions}\n      nextOptionsTitle=\"选择下一句话（与上一句韵脚押韵）\"\n      gameStartedTitle=\"押韵游戏进行中\"\n    />\n  );\n};\n\n// 子页面组件\nconst SearchPage = ({ \n  API_BASE_URL, \n  query, \n  setQuery, \n  searchResults,\n  setSearchResults,\n  loading,\n  setLoading,\n  apiStatus,\n  error,\n  setError,\n  selectedResult,\n  setSelectedResult,\n  videoUrl,\n  setVideoUrl,\n  isVideoLoading,\n  setIsVideoLoading,\n  handleSearch,\n  handleGenerateClip,\n  formatTime,\n  formatEpisode,\n  highlightText\n}) => {\n  return (\n    <>\n      <section className=\"search-area\">\n        <form onSubmit={handleSearch}>\n          <div className=\"search-box\">\n            <input\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"输入要搜索的字幕内容...\"\n              disabled={apiStatus !== 'connected'}\n            />\n            <button \n              type=\"submit\" \n              disabled={loading || apiStatus !== 'connected'}\n            >\n              {loading ? '搜索中...' : '搜索'}\n            </button>\n          </div>\n        </form>\n\n        {error && <div className=\"error-message\">{error}</div>}\n      </section>\n\n      <div className=\"content-area\">\n        <section className=\"results-area\">\n          <h2>搜索结果 {searchResults.length > 0 && `(${searchResults.length})`}</h2>\n          \n          {loading ? (\n            <div className=\"loading\">搜索中，请稍候...</div>\n          ) : (\n            <ul className=\"results-list\">\n              {searchResults.map((result, index) => (\n                <li \n                  key={index} \n                  className={selectedResult === result ? 'selected' : ''}\n                  onClick={() => handleGenerateClip(result)}\n                >\n                  <div className=\"result-header\">\n                    <span className=\"episode\">{formatEpisode(result.episode)}</span>\n                    <span className=\"time\">{formatTime(result.start_seconds)} - {formatTime(result.end_seconds)}</span>\n                  </div>\n                  <div \n                    className=\"subtitle-text\"\n                    dangerouslySetInnerHTML={{__html: highlightText(result.text, query)}}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n        </section>\n\n        <section className=\"video-area\">\n          <h2>视频播放</h2>\n          {selectedResult ? (\n            <div className=\"video-player\">\n              <div className=\"video-info\">\n                <p><strong>集数:</strong> {formatEpisode(selectedResult.episode)}</p>\n                <p><strong>时间段:</strong> {formatTime(selectedResult.start_seconds)} - {formatTime(selectedResult.end_seconds)}</p>\n                <p><strong>字幕内容:</strong> {selectedResult.text}</p>\n              </div>\n              \n              {isVideoLoading ? (\n                <div className=\"loading-video\">生成视频片段中，请稍候...</div>\n              ) : videoUrl ? (\n                <video \n                  controls \n                  autoPlay \n                  className=\"video-element\"\n                  src={videoUrl}\n                />\n              ) : (\n                <div className=\"video-placeholder\">\n                  {selectedResult ? '准备生成视频片段...' : '请从左侧选择一个搜索结果'}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"video-placeholder\">\n              请从左侧选择一个搜索结果\n            </div>\n          )}\n        </section>\n      </div>\n    </>\n  );\n};\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedResult, setSelectedResult] = useState(null);\n  const [videoUrl, setVideoUrl] = useState('');\n  const [apiStatus, setApiStatus] = useState({loading: true, error: null, data: null});\n  const [activePage, setActivePage] = useState('search'); // 'search', 'chain-game' 或 'rhyme-game'\n  \n  // API 相关配置\n  const API_BASE_URL = 'http://localhost:8089';\n  \n  // 检查API状态\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/status`);\n        \n        if (response.ok) {\n          const data = await response.json();\n          setApiStatus({loading: false, error: null, data});\n          console.log(\"API状态:\", data);\n        } else {\n          setApiStatus({loading: false, error: '无法连接到API服务', data: null});\n        }\n      } catch (error) {\n        console.error(\"API连接错误:\", error);\n        setApiStatus({loading: false, error: '无法连接到API服务', data: null});\n      }\n    };\n    \n    checkApiStatus();\n  }, []);\n  \n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!query.trim()) {\n      setError('请输入搜索内容');\n      return;\n    }\n    \n    setLoading(true);\n    setError('');\n    setResults([]);\n    setSelectedResult(null);\n    setVideoUrl('');\n    \n    try {\n      // 构建查询URL\n      const queryParams = new URLSearchParams({\n        query: query.trim()\n      }).toString();\n      \n      const response = await fetch(`${API_BASE_URL}/api/search?${queryParams}`);\n      \n      if (response.ok) {\n        const data = await response.json();\n        setResults(data.results || []);\n        if (data.results && data.results.length === 0) {\n          setError('没有找到匹配的结果');\n        }\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || '搜索失败');\n      }\n    } catch (error) {\n      console.error('搜索失败:', error);\n      setError('搜索请求失败，请检查网络连接');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleGenerateClip = async (result) => {\n    if (!result) return;\n    \n    setSelectedResult(result);\n    setLoading(true);\n    setError('');\n    setVideoUrl('');\n    \n    try {\n      const response = await fetch(`${API_BASE_URL}/api/generate_clip`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          episode: result.episode,\n          start_time: result.start_seconds,\n          end_time: result.end_seconds,\n          context_seconds: 3 // 上下文秒数\n        })\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        if (data.success) {\n          // 确保视频URL包含完整的基础URL\n          const fullVideoUrl = data.video_url.startsWith('http') \n            ? data.video_url \n            : `${API_BASE_URL}${data.video_url}`;\n          setVideoUrl(fullVideoUrl);\n        } else {\n          setError(data.error || '视频片段生成失败');\n        }\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || '请求失败');\n      }\n    } catch (error) {\n      console.error('生成视频片段失败:', error);\n      setError('请求失败，请检查网络连接');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // 格式化时间\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n  \n  // 格式化集数\n  const formatEpisode = (episode) => {\n    return `第${episode.match(/\\d+/)[0]}集`;\n  };\n  \n  // 高亮显示匹配文本\n  const highlightText = (text, query) => {\n    if (!query || !text) return text;\n    \n    try {\n      const regex = new RegExp(query, 'gi');\n      return text.replace(regex, match => `<mark>${match}</mark>`);\n    } catch (e) {\n      return text;\n    }\n  };\n  \n  // 切换页面\n  const switchPage = (page) => {\n    setActivePage(page);\n  };\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>《后宫·甄嬛传》字幕搜索系统</h1>\n        {apiStatus.loading && <p className=\"api-status checking\">检查API连接中...</p>}\n        {apiStatus.error && <p className=\"api-status error\">无法连接到API服务，请确保后端服务已启动</p>}\n        {apiStatus.data && <p className=\"api-status connected\">API服务已连接 (已加载 {apiStatus.data.loaded_episodes} 集, {apiStatus.data.total_subtitles} 条字幕)</p>}\n        \n        <nav className=\"main-nav\">\n          <ul>\n            <li className={activePage === 'search' ? 'active' : ''}>\n              <button onClick={() => switchPage('search')}>字幕搜索</button>\n            </li>\n            <li className={activePage === 'chain-game' ? 'active' : ''}>\n              <button onClick={() => switchPage('chain-game')}>成语接龙</button>\n            </li>\n            <li className={activePage === 'rhyme-game' ? 'active' : ''}>\n              <button onClick={() => switchPage('rhyme-game')}>押韵游戏</button>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      \n      <main className=\"App-main\">\n        {activePage === 'search' && (\n          <SearchPage\n            API_BASE_URL={API_BASE_URL}\n            query={query}\n            setQuery={setQuery}\n            searchResults={results}\n            setSearchResults={setResults}\n            loading={loading}\n            setLoading={setLoading}\n            apiStatus={apiStatus.data ? 'connected' : 'error'}\n            error={error}\n            setError={setError}\n            selectedResult={selectedResult}\n            setSelectedResult={setSelectedResult}\n            videoUrl={videoUrl}\n            setVideoUrl={setVideoUrl}\n            isVideoLoading={loading}\n            setIsVideoLoading={setLoading}\n            handleSearch={handleSearch}\n            handleGenerateClip={handleGenerateClip}\n            formatTime={formatTime}\n            formatEpisode={formatEpisode}\n            highlightText={highlightText}\n          />\n        )}\n        \n        {activePage === 'chain-game' && (\n          <ChainGamePage\n            API_BASE_URL={API_BASE_URL}\n            apiStatus={apiStatus.data ? 'connected' : 'error'}\n            formatTime={formatTime}\n            formatEpisode={formatEpisode}\n          />\n        )}\n        \n        {activePage === 'rhyme-game' && (\n          <RhymeGamePage\n            API_BASE_URL={API_BASE_URL}\n            apiStatus={apiStatus.data ? 'connected' : 'error'}\n            formatTime={formatTime}\n            formatEpisode={formatEpisode}\n          />\n        )}\n      </main>\n      \n      <footer className=\"App-footer\">\n        <p>© 2025 甄嬛传字幕搜索系统</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}