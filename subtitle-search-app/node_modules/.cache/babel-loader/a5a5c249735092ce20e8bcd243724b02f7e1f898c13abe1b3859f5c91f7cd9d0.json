{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import axios from'axios';// 子页面组件\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SearchPage=_ref=>{let{API_BASE_URL,query,setQuery,searchResults,setSearchResults,loading,setLoading,apiStatus,error,setError,selectedResult,setSelectedResult,videoUrl,setVideoUrl,isVideoLoading,setIsVideoLoading,handleSearch,handleGenerateClip,formatTime,formatEpisode,highlightText,availableDramas,selectedDramas,setSelectedDramas,formatDramaName}=_ref;// 处理剧集选择变化\nconst handleDramaChange=dramaId=>{if(selectedDramas.includes(dramaId)){// 如果已经选中，则从数组中移除\nsetSelectedDramas(selectedDramas.filter(id=>id!==dramaId));}else{// 如果未选中，则添加到数组\nsetSelectedDramas([...selectedDramas,dramaId]);}};// 选择/取消选择所有剧集\nconst toggleAllDramas=()=>{if(selectedDramas.length===availableDramas.length){// 如果已选择所有剧集，则取消选择所有\nsetSelectedDramas([]);}else{// 选择所有剧集\nsetSelectedDramas(availableDramas.map(drama=>drama.id));}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"search-area\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drama-selector\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drama-selector-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u9009\\u62E9\\u5267\\u96C6\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"toggle-all-button\",onClick:toggleAllDramas,children:selectedDramas.length===availableDramas.length?'取消全选':'全选'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"drama-checkbox-container\",children:availableDramas.map(drama=>/*#__PURE__*/_jsxs(\"div\",{className:\"drama-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:`drama-${drama.id}`,checked:selectedDramas.includes(drama.id),onChange:()=>handleDramaChange(drama.id)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`drama-${drama.id}`,children:formatDramaName(drama)})]},drama.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:query,onChange:e=>setQuery(e.target.value),placeholder:\"\\u8F93\\u5165\\u8981\\u641C\\u7D22\\u7684\\u5B57\\u5E55\\u5185\\u5BB9...\",disabled:apiStatus!=='connected'}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading||apiStatus!=='connected'||selectedDramas.length===0,children:loading?'搜索中...':'搜索'})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content-area\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"results-area\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\u641C\\u7D22\\u7ED3\\u679C \",searchResults.length>0&&`(${searchResults.length})`]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u641C\\u7D22\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"results-list\",children:searchResults.map((result,index)=>/*#__PURE__*/_jsxs(\"li\",{className:selectedResult===result?'selected':'',onClick:()=>handleGenerateClip(result),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:result.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(result.episode)}),/*#__PURE__*/_jsxs(\"span\",{className:\"time\",children:[formatTime(result.start_seconds),\" - \",formatTime(result.end_seconds)]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"subtitle-text\",dangerouslySetInnerHTML:{__html:highlightText(result.text,query)}})]},index))})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"video-area\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u89C6\\u9891\\u64AD\\u653E\"}),selectedResult?/*#__PURE__*/_jsxs(\"div\",{className:\"video-player\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"video-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5267\\u96C6:\"}),\" \",formatDramaName({id:selectedResult.drama_id})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u96C6\\u6570:\"}),\" \",formatEpisode(selectedResult.episode)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u65F6\\u95F4\\u6BB5:\"}),\" \",formatTime(selectedResult.start_seconds),\" - \",formatTime(selectedResult.end_seconds)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5B57\\u5E55\\u5185\\u5BB9:\"}),\" \",selectedResult.text]})]}),isVideoLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-video\",children:\"\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):videoUrl?/*#__PURE__*/_jsx(\"video\",{controls:true,autoPlay:true,className:\"video-element\",src:videoUrl}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder\",children:selectedResult?'准备生成视频片段...':'请从左侧选择一个搜索结果'})]}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder\",children:\"\\u8BF7\\u4ECE\\u5DE6\\u4FA7\\u9009\\u62E9\\u4E00\\u4E2A\\u641C\\u7D22\\u7ED3\\u679C\"})]})]})]});};// 成语接龙游戏组件\nconst ChainGamePage=_ref2=>{let{API_BASE_URL,apiStatus,formatTime,formatEpisode,availableDramas,formatDramaName}=_ref2;const[gameStarted,setGameStarted]=useState(false);const[currentPrompts,setCurrentPrompts]=useState([]);const[loadingPrompts,setLoadingPrompts]=useState(false);const[gameLog,setGameLog]=useState([]);const[currentSentence,setCurrentSentence]=useState(null);const[nextOptions,setNextOptions]=useState([]);const[loadingNextOptions,setLoadingNextOptions]=useState(false);const[gameError,setGameError]=useState(null);const[videoUrl,setVideoUrl]=useState('');const[isVideoLoading,setIsVideoLoading]=useState(false);const[selectedOption,setSelectedOption]=useState(null);const[isExportingVideo,setIsExportingVideo]=useState(false);const[clipUrls,setClipUrls]=useState([]);const[isConfirmMode,setIsConfirmMode]=useState(false);const[selectedDramas,setSelectedDramas]=useState(availableDramas?availableDramas.map(drama=>drama.id):[]);// 处理剧集选择变化\nconst handleDramaChange=dramaId=>{if(selectedDramas.includes(dramaId)){// 如果已经选中，则从数组中移除\nsetSelectedDramas(selectedDramas.filter(id=>id!==dramaId));}else{// 如果未选中，则添加到数组\nsetSelectedDramas([...selectedDramas,dramaId]);}};// 选择/取消选择所有剧集\nconst toggleAllDramas=()=>{if(selectedDramas.length===availableDramas.length){// 如果已选择所有剧集，则取消选择所有\nsetSelectedDramas([]);}else{// 选择所有剧集\nsetSelectedDramas(availableDramas.map(drama=>drama.id));}};// 获取随机提示句子\nconst fetchRandomPrompts=async()=>{if(selectedDramas.length===0){setGameError('请至少选择一个剧集');return;}setLoadingPrompts(true);setGameError(null);try{const response=await axios.get(`${API_BASE_URL}/api/random_sentences`,{params:{count:8,drama_ids:selectedDramas.join(',')}});if(response.data&&response.data.results){setCurrentPrompts(response.data.results);}else{setGameError('获取随机句子失败');}}catch(error){console.error('获取随机句子错误:',error);setGameError('无法获取随机句子');}finally{setLoadingPrompts(false);}};// 刷新随机提示\nconst refreshRandomPrompts=()=>{if(apiStatus==='connected'&&!loadingPrompts){fetchRandomPrompts();}};// 生成视频片段\nconst generateVideoClip=async subtitle=>{setIsVideoLoading(true);setVideoUrl('');setGameError(null);try{const response=await axios.post(`${API_BASE_URL}/api/generate_clip`,{drama_id:subtitle.drama_id,episode:subtitle.episode,start_time:subtitle.start_seconds,end_time:subtitle.end_seconds,context_seconds:2});if(response.data&&response.data.clip_url){const clipUrl=`${API_BASE_URL}${response.data.clip_url}`;setVideoUrl(clipUrl);return clipUrl;}else{setGameError('生成视频片段失败');return null;}}catch(error){console.error('生成视频片段出错:',error);setGameError('视频服务出现错误，请确保视频文件存在且可访问');return null;}finally{setIsVideoLoading(false);}};// 选择开始句子\nconst selectStartSentence=prompt=>{setSelectedOption(prompt);setIsConfirmMode(true);generateVideoClip(prompt);};// 确认选择开始句子\nconst confirmStartSentence=()=>{const sentence=selectedOption;if(!sentence)return;setCurrentSentence(sentence);setGameLog([{...sentence,step:1,clipUrl:videoUrl}]);setClipUrls([...clipUrls,videoUrl]);setGameStarted(true);fetchNextOptions(sentence.text);setIsConfirmMode(false);setSelectedOption(null);};// 取消选择\nconst cancelSelection=()=>{setIsConfirmMode(false);setSelectedOption(null);setVideoUrl('');};// 选择下一个句子\nconst selectNextSentence=option=>{setSelectedOption(option);setIsConfirmMode(true);generateVideoClip(option);};// 确认选择下一个句子\nconst confirmNextSentence=()=>{const sentence=selectedOption;if(!sentence)return;setCurrentSentence(sentence);setGameLog([...gameLog,{...sentence,step:gameLog.length+1,clipUrl:videoUrl}]);setClipUrls([...clipUrls,videoUrl]);fetchNextOptions(sentence.text);setIsConfirmMode(false);setSelectedOption(null);};// 获取下一步选项\nconst fetchNextOptions=async text=>{if(!text)return;setLoadingNextOptions(true);setGameError(null);try{// 获取最后一个字，排除语气词\nlet lastChar=getLastValidChar(text);if(!lastChar){setGameError('无法识别有效的结尾字符');setLoadingNextOptions(false);return;}console.log(`正在查找以\"${lastChar}\"开头的句子...`);// 确保有选择的剧集\nif(selectedDramas.length===0){setGameError('请至少选择一个剧集');setLoadingNextOptions(false);return;}const dramaIdsParam=selectedDramas.join(',');const response=await fetch(`${API_BASE_URL}/api/search?query=${encodeURIComponent(`^${lastChar}`)}&use_regex=true&drama_ids=${dramaIdsParam}`);if(!response.ok){throw new Error(`API请求失败: ${response.status}`);}const data=await response.json();if(data&&data.results){console.log(`API返回了 ${data.results.length} 条结果`);// 过滤结果，保留3-8个字的句子\nconst filteredResults=data.results.filter(item=>{const cleanText=item.text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/,'');return cleanText.length>=3&&cleanText.length<=8;});console.log(`过滤后还有 ${filteredResults.length} 条结果`);if(filteredResults.length===0){// 如果没有找到结果，尝试不使用正则表达式的精确查询\nconsole.log(`尝试使用精确查询搜索以\"${lastChar}\"开头的句子`);const fallbackResponse=await fetch(`${API_BASE_URL}/api/search?query=${encodeURIComponent(lastChar)}&drama_ids=${dramaIdsParam}`);const fallbackData=await fallbackResponse.json();if(fallbackData&&fallbackData.results){console.log(`精确查询返回了 ${fallbackData.results.length} 条结果`);// 手动过滤以lastChar开头的结果\nconst manualFilteredResults=fallbackData.results.filter(item=>{return item.text.startsWith(lastChar)&&item.text.length>=3&&item.text.length<=8;});if(manualFilteredResults.length>0){console.log(`手动过滤后找到 ${manualFilteredResults.length} 条结果`);// 随机选择最多8个结果\nconst shuffled=[...manualFilteredResults].sort(()=>0.5-Math.random());setNextOptions(shuffled.slice(0,8));setLoadingNextOptions(false);return;}}setGameError(`没有找到以\"${lastChar}\"开头的句子`);}else{// 随机选择最多8个结果\nconst shuffled=[...filteredResults].sort(()=>0.5-Math.random());setNextOptions(shuffled.slice(0,8));}}else{setGameError('获取接续句子失败');}}catch(error){console.error('获取接续句子错误:',error);setGameError(`查询错误: ${error.message}`);}finally{setLoadingNextOptions(false);}};// 获取最后一个有效字符（排除语气词）\nconst getLastValidChar=text=>{if(!text||text.length===0)return null;// 排除常见语气词\nconst cleanText=text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/,'');return cleanText.length>0?cleanText[cleanText.length-1]:null;};// 刷新下一步选项\nconst refreshNextOptions=()=>{if(currentSentence&&!loadingNextOptions){fetchNextOptions(currentSentence.text);}};// 回到上一步\nconst goBackOneStep=()=>{if(gameLog.length<=1){// 只有一步，回到选择开始句子\nsetGameStarted(false);setGameLog([]);setCurrentSentence(null);setNextOptions([]);setClipUrls([]);setVideoUrl('');fetchRandomPrompts();}else{// 移除最后一步\nconst newLog=[...gameLog];newLog.pop();setGameLog(newLog);// 更新当前句子和视频\nconst prevSentence=newLog[newLog.length-1];setCurrentSentence(prevSentence);// 更新剪辑URL列表\nconst newClipUrls=[...clipUrls];newClipUrls.pop();setClipUrls(newClipUrls);// 重新获取选项\nfetchNextOptions(prevSentence.text);}};// 合并视频并导出\nconst exportMergedVideo=async()=>{if(clipUrls.length===0)return;setIsExportingVideo(true);setGameError(null);try{const response=await axios.post(`${API_BASE_URL}/api/merge_clips`,{clip_urls:clipUrls});if(response.data&&response.data.merged_url){const mergedVideoUrl=`${API_BASE_URL}${response.data.merged_url}`;// 创建下载链接并强制触发下载\nconst link=document.createElement('a');link.href=mergedVideoUrl;link.download='接龙视频.mp4';link.target='_blank';document.body.appendChild(link);// 必须添加到DOM中\nlink.click();setTimeout(()=>{document.body.removeChild(link);// 清理DOM\n},100);console.log('视频合并成功，已触发下载');}else{setGameError('视频合并失败: '+(response.data.error||'未知错误'));}}catch(error){var _error$response,_error$response$data;console.error('视频合并错误:',error);setGameError('视频合并服务出错: '+(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||error.message));}finally{setIsExportingVideo(false);}};// 开始新游戏\nconst startNewGame=()=>{setGameLog([]);fetchRandomPrompts();setGameStarted(false);setCurrentSentence(null);setNextOptions([]);setClipUrls([]);setVideoUrl('');setSelectedOption(null);setIsConfirmMode(false);};// 初始加载时获取随机提示\nuseEffect(()=>{if(apiStatus==='connected'){fetchRandomPrompts();}},[apiStatus]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chain-game-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drama-selector\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drama-selector-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u9009\\u62E9\\u5267\\u96C6\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"toggle-all-button\",onClick:toggleAllDramas,children:selectedDramas.length===availableDramas.length?'取消全选':'全选'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"drama-checkbox-container\",children:availableDramas.map(drama=>/*#__PURE__*/_jsxs(\"div\",{className:\"drama-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:`chain-drama-${drama.id}`,checked:selectedDramas.includes(drama.id),onChange:()=>handleDramaChange(drama.id)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`chain-drama-${drama.id}`,children:formatDramaName(drama)})]},drama.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startNewGame,className:\"new-game-btn\",disabled:apiStatus!=='connected',children:\"\\u65B0\\u6E38\\u620F\"}),gameStarted&&/*#__PURE__*/_jsx(\"button\",{onClick:goBackOneStep,className:\"back-btn\",disabled:gameLog.length===0,children:\"\\u4E0A\\u4E00\\u6B65\"}),clipUrls.length>1&&/*#__PURE__*/_jsx(\"button\",{onClick:exportMergedVideo,className:\"export-btn\",disabled:isExportingVideo,children:isExportingVideo?'导出中...':'导出接龙视频'})]}),gameError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:gameError}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-candidates\",children:[!gameStarted?/*#__PURE__*/_jsxs(\"div\",{className:\"start-game-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u9009\\u62E9\\u5F00\\u59CB\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshRandomPrompts,className:\"refresh-btn\",disabled:loadingPrompts||apiStatus!=='connected',children:\"\\u6362\\u4E00\\u6279\"})]}),loadingPrompts?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u52A0\\u8F7D\\u63D0\\u793A\\u53E5\\u5B50\\u4E2D...\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"prompts-list\",children:currentPrompts.map((prompt,index)=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>selectStartSentence(prompt),className:selectedOption===prompt?'prompt-item selected':'prompt-item',children:[/*#__PURE__*/_jsx(\"div\",{className:\"prompt-text\",children:prompt.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"prompt-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:prompt.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(prompt.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(prompt.start_seconds)}),/*#__PURE__*/_jsx(\"span\",{className:`sentence-type ${analyzeSentenceType(prompt.text)}`,children:analyzeSentenceType(prompt.text)})]})]},index))}),currentPrompts.length===0&&!loadingPrompts&&/*#__PURE__*/_jsxs(\"div\",{className:\"empty-prompts\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CA1\\u6709\\u53EF\\u7528\\u7684\\u63D0\\u793A\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshRandomPrompts,children:\"\\u91CD\\u65B0\\u83B7\\u53D6\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"current-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u5F53\\u524D\\u53E5\\u5B50\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-sentence\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"current-text\",children:currentSentence===null||currentSentence===void 0?void 0:currentSentence.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:currentSentence===null||currentSentence===void 0?void 0:currentSentence.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(currentSentence===null||currentSentence===void 0?void 0:currentSentence.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(currentSentence===null||currentSentence===void 0?void 0:currentSentence.start_seconds)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"next-hint\",children:[\"\\u4E0B\\u4E00\\u53E5\\u9700\\u4EE5\\u300C\",getLastValidChar(currentSentence===null||currentSentence===void 0?void 0:currentSentence.text),\"\\u300D\\u5B57\\u5F00\\u5934\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"next-options-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u53EF\\u9009\\u63A5\\u7EED\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshNextOptions,className:\"refresh-btn\",disabled:loadingNextOptions,children:\"\\u6362\\u4E00\\u6279\"})]}),loadingNextOptions?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u52A0\\u8F7D\\u63A5\\u7EED\\u53E5\\u5B50\\u4E2D...\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"options-list\",children:nextOptions.map((option,index)=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>selectNextSentence(option),className:selectedOption===option?'option-item selected':'option-item',children:[/*#__PURE__*/_jsx(\"div\",{className:\"option-text\",children:option.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:option.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(option.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(option.start_seconds)}),/*#__PURE__*/_jsx(\"span\",{className:`sentence-type ${analyzeSentenceType(option.text)}`,children:analyzeSentenceType(option.text)})]})]},index))}),nextOptions.length===0&&!loadingNextOptions&&/*#__PURE__*/_jsxs(\"div\",{className:\"no-options\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CA1\\u6709\\u627E\\u5230\\u5408\\u9002\\u7684\\u63A5\\u7EED\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startNewGame,children:\"\\u91CD\\u65B0\\u5F00\\u59CB\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-log-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u63A5\\u9F99\\u8BB0\\u5F55\"}),gameLog.length>0?/*#__PURE__*/_jsx(\"ol\",{className:\"game-log-list\",children:gameLog.map((log,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"log-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"log-text\",children:log.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"log-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:log.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(log.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(log.start_seconds)}),log.clipUrl&&/*#__PURE__*/_jsx(\"span\",{className:\"clip-info\",children:/*#__PURE__*/_jsx(\"i\",{className:\"video-icon\",children:\"\\uD83C\\uDFAC\"})})]})]},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"empty-log\",children:\"\\u5C1A\\u672A\\u5F00\\u59CB\\u6E38\\u620F\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-video-preview\",children:[isConfirmMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"confirm-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selected-sentence\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"selected-text\",children:selectedOption===null||selectedOption===void 0?void 0:selectedOption.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"selected-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:selectedOption===null||selectedOption===void 0?void 0:selectedOption.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(selectedOption===null||selectedOption===void 0?void 0:selectedOption.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(selectedOption===null||selectedOption===void 0?void 0:selectedOption.start_seconds)})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"video-preview\",children:isVideoLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-video\",children:\"\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):videoUrl?/*#__PURE__*/_jsx(\"video\",{controls:true,autoPlay:true,className:\"video-element\",src:videoUrl}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder\",children:\"\\u51C6\\u5907\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5...\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirm-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"confirm-btn\",onClick:gameStarted?confirmNextSentence:confirmStartSentence,disabled:isVideoLoading||!videoUrl,children:\"\\u786E\\u8BA4\\u9009\\u62E9\"}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-btn\",onClick:cancelSelection,children:\"\\u53D6\\u6D88\\u9009\\u62E9\"})]})]}),!isConfirmMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"video-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u89C6\\u9891\\u9884\\u89C8\"}),isVideoLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-video\",children:\"\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):videoUrl?/*#__PURE__*/_jsx(\"video\",{controls:true,autoPlay:true,className:\"video-element\",src:videoUrl}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder large\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"placeholder-text\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u4ECE\\u5DE6\\u4FA7\\u9009\\u62E9\\u4E00\\u4E2A\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u9009\\u62E9\\u540E\\u5C06\\u5728\\u6B64\\u5904\\u9884\\u89C8\\u89C6\\u9891\"})]})})]})]})]})]});};// 押韵游戏组件\nconst RhymeGamePage=_ref3=>{let{API_BASE_URL,apiStatus,formatTime,formatEpisode,availableDramas,formatDramaName}=_ref3;const[gameStarted,setGameStarted]=useState(false);const[currentPrompts,setCurrentPrompts]=useState([]);const[loadingPrompts,setLoadingPrompts]=useState(false);const[gameLog,setGameLog]=useState([]);const[currentSentence,setCurrentSentence]=useState(null);const[nextOptions,setNextOptions]=useState([]);const[loadingNextOptions,setLoadingNextOptions]=useState(false);const[gameError,setGameError]=useState(null);const[videoUrl,setVideoUrl]=useState('');const[isVideoLoading,setIsVideoLoading]=useState(false);const[selectedOption,setSelectedOption]=useState(null);const[isExportingVideo,setIsExportingVideo]=useState(false);const[clipUrls,setClipUrls]=useState([]);const[isConfirmMode,setIsConfirmMode]=useState(false);const[selectedDramas,setSelectedDramas]=useState(availableDramas?availableDramas.map(drama=>drama.id):[]);// 处理剧集选择变化\nconst handleDramaChange=dramaId=>{if(selectedDramas.includes(dramaId)){// 如果已经选中，则从数组中移除\nsetSelectedDramas(selectedDramas.filter(id=>id!==dramaId));}else{// 如果未选中，则添加到数组\nsetSelectedDramas([...selectedDramas,dramaId]);}};// 选择/取消选择所有剧集\nconst toggleAllDramas=()=>{if(selectedDramas.length===availableDramas.length){// 如果已选择所有剧集，则取消选择所有\nsetSelectedDramas([]);}else{// 选择所有剧集\nsetSelectedDramas(availableDramas.map(drama=>drama.id));}};// 获取随机提示句子\nconst fetchRandomPrompts=async()=>{if(selectedDramas.length===0){setGameError('请至少选择一个剧集');return;}setLoadingPrompts(true);setGameError(null);try{const response=await axios.get(`${API_BASE_URL}/api/random_sentences`,{params:{count:8,drama_ids:selectedDramas.join(',')}});if(response.data&&response.data.results){setCurrentPrompts(response.data.results);}else{setGameError('获取随机句子失败');}}catch(error){console.error('获取随机句子错误:',error);setGameError('无法获取随机句子');}finally{setLoadingPrompts(false);}};// 刷新随机提示\nconst refreshRandomPrompts=()=>{if(apiStatus==='connected'&&!loadingPrompts){fetchRandomPrompts();}};// 生成视频片段\nconst generateVideoClip=async subtitle=>{setIsVideoLoading(true);setVideoUrl('');setGameError(null);try{const response=await axios.post(`${API_BASE_URL}/api/generate_clip`,{drama_id:subtitle.drama_id,episode:subtitle.episode,start_time:subtitle.start_seconds,end_time:subtitle.end_seconds,context_seconds:2});if(response.data&&response.data.clip_url){const clipUrl=`${API_BASE_URL}${response.data.clip_url}`;setVideoUrl(clipUrl);return clipUrl;}else{setGameError('生成视频片段失败');return null;}}catch(error){console.error('生成视频片段出错:',error);setGameError('视频服务出现错误，请确保视频文件存在且可访问');return null;}finally{setIsVideoLoading(false);}};// 选择开始句子\nconst selectStartSentence=prompt=>{setSelectedOption(prompt);setIsConfirmMode(true);generateVideoClip(prompt);};// 确认选择开始句子\nconst confirmStartSentence=()=>{const sentence=selectedOption;if(!sentence)return;setCurrentSentence(sentence);setGameLog([{...sentence,step:1,clipUrl:videoUrl}]);setClipUrls([...clipUrls,videoUrl]);setGameStarted(true);fetchRhymingOptions(sentence.text);setIsConfirmMode(false);setSelectedOption(null);};// 取消选择\nconst cancelSelection=()=>{setIsConfirmMode(false);setSelectedOption(null);setVideoUrl('');};// 选择下一个句子\nconst selectNextSentence=option=>{setSelectedOption(option);setIsConfirmMode(true);generateVideoClip(option);};// 确认选择下一个句子\nconst confirmNextSentence=()=>{const sentence=selectedOption;if(!sentence)return;setCurrentSentence(sentence);setGameLog([...gameLog,{...sentence,step:gameLog.length+1,clipUrl:videoUrl}]);setClipUrls([...clipUrls,videoUrl]);fetchRhymingOptions(sentence.text);setIsConfirmMode(false);setSelectedOption(null);};// 查找韵脚匹配的选项\nconst fetchRhymingOptions=async text=>{if(!text)return;setLoadingNextOptions(true);setGameError(null);try{// 确保有选择的剧集\nif(selectedDramas.length===0){setGameError('请至少选择一个剧集');setLoadingNextOptions(false);return;}const response=await axios.get(`${API_BASE_URL}/api/rhyming_sentences`,{params:{text:text,min_length:3,max_length:20,limit:8,drama_ids:selectedDramas.join(',')}});if(response.data&&response.data.results){setNextOptions(response.data.results);}else{setGameError('获取押韵选项失败');}}catch(error){console.error('获取押韵选项错误:',error);setGameError('无法获取押韵选项');}finally{setLoadingNextOptions(false);}};// 获取最后一个有效字符（排除语气词）\nconst getLastValidChar=text=>{if(!text||text.length===0)return null;// 排除常见语气词\nconst cleanText=text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/,'');return cleanText.length>0?cleanText[cleanText.length-1]:null;};// 刷新下一步选项\nconst refreshNextOptions=()=>{if(currentSentence&&!loadingNextOptions){fetchRhymingOptions(currentSentence.text);}};// 回到上一步\nconst goBackOneStep=()=>{if(gameLog.length<=1){// 只有一步，回到选择开始句子\nsetGameStarted(false);setGameLog([]);setCurrentSentence(null);setNextOptions([]);setClipUrls([]);setVideoUrl('');fetchRandomPrompts();}else{// 移除最后一步\nconst newLog=[...gameLog];newLog.pop();setGameLog(newLog);// 更新当前句子和视频\nconst prevSentence=newLog[newLog.length-1];setCurrentSentence(prevSentence);// 更新剪辑URL列表\nconst newClipUrls=[...clipUrls];newClipUrls.pop();setClipUrls(newClipUrls);// 重新获取选项\nfetchRhymingOptions(prevSentence.text);}};// 合并视频并导出\nconst exportMergedVideo=async()=>{if(clipUrls.length===0)return;setIsExportingVideo(true);setGameError(null);try{const response=await axios.post(`${API_BASE_URL}/api/merge_clips`,{clip_urls:clipUrls});if(response.data&&response.data.merged_url){const mergedVideoUrl=`${API_BASE_URL}${response.data.merged_url}`;// 创建下载链接并强制触发下载\nconst link=document.createElement('a');link.href=mergedVideoUrl;link.download='押韵视频.mp4';link.target='_blank';document.body.appendChild(link);// 必须添加到DOM中\nlink.click();setTimeout(()=>{document.body.removeChild(link);// 清理DOM\n},100);console.log('视频合并成功，已触发下载');}else{setGameError('视频合并失败: '+(response.data.error||'未知错误'));}}catch(error){var _error$response2,_error$response2$data;console.error('视频合并错误:',error);setGameError('视频合并服务出错: '+(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||error.message));}finally{setIsExportingVideo(false);}};// 开始新游戏\nconst startNewGame=()=>{setGameLog([]);fetchRandomPrompts();setGameStarted(false);setCurrentSentence(null);setNextOptions([]);setClipUrls([]);setVideoUrl('');setSelectedOption(null);setIsConfirmMode(false);};// 初始加载时获取随机提示\nuseEffect(()=>{if(apiStatus==='connected'){fetchRandomPrompts();}},[apiStatus]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chain-game-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drama-selector\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drama-selector-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u9009\\u62E9\\u5267\\u96C6\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"toggle-all-button\",onClick:toggleAllDramas,children:selectedDramas.length===availableDramas.length?'取消全选':'全选'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"drama-checkbox-container\",children:availableDramas.map(drama=>/*#__PURE__*/_jsxs(\"div\",{className:\"drama-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:`rhyme-drama-${drama.id}`,checked:selectedDramas.includes(drama.id),onChange:()=>handleDramaChange(drama.id)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`rhyme-drama-${drama.id}`,children:formatDramaName(drama)})]},drama.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startNewGame,className:\"new-game-btn\",disabled:apiStatus!=='connected',children:\"\\u65B0\\u6E38\\u620F\"}),gameStarted&&/*#__PURE__*/_jsx(\"button\",{onClick:goBackOneStep,className:\"back-btn\",disabled:gameLog.length===0,children:\"\\u4E0A\\u4E00\\u6B65\"}),clipUrls.length>1&&/*#__PURE__*/_jsx(\"button\",{onClick:exportMergedVideo,className:\"export-btn\",disabled:isExportingVideo,children:isExportingVideo?'导出中...':'导出押韵视频'})]}),gameError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:gameError}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-candidates\",children:[!gameStarted?/*#__PURE__*/_jsxs(\"div\",{className:\"start-game-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u9009\\u62E9\\u5F00\\u59CB\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshRandomPrompts,className:\"refresh-btn\",disabled:loadingPrompts||apiStatus!=='connected',children:\"\\u6362\\u4E00\\u6279\"})]}),loadingPrompts?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u52A0\\u8F7D\\u63D0\\u793A\\u53E5\\u5B50\\u4E2D...\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"prompts-list\",children:currentPrompts.map((prompt,index)=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>selectStartSentence(prompt),className:selectedOption===prompt?'prompt-item selected':'prompt-item',children:[/*#__PURE__*/_jsx(\"div\",{className:\"prompt-text\",children:prompt.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"prompt-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:prompt.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(prompt.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(prompt.start_seconds)}),/*#__PURE__*/_jsx(\"span\",{className:`sentence-type ${analyzeSentenceType(prompt.text)}`,children:analyzeSentenceType(prompt.text)})]})]},index))}),currentPrompts.length===0&&!loadingPrompts&&/*#__PURE__*/_jsxs(\"div\",{className:\"empty-prompts\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CA1\\u6709\\u53EF\\u7528\\u7684\\u63D0\\u793A\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshRandomPrompts,children:\"\\u91CD\\u65B0\\u83B7\\u53D6\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"current-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u5F53\\u524D\\u53E5\\u5B50\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-sentence\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"current-text\",children:currentSentence===null||currentSentence===void 0?void 0:currentSentence.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:currentSentence===null||currentSentence===void 0?void 0:currentSentence.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(currentSentence===null||currentSentence===void 0?void 0:currentSentence.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(currentSentence===null||currentSentence===void 0?void 0:currentSentence.start_seconds)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"next-hint\",children:\"\\u4E0B\\u4E00\\u53E5\\u9700\\u4E0E\\u6B64\\u53E5\\u97F5\\u811A\\u76F8\\u540C\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"next-options-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u62BC\\u97F5\\u9009\\u9879\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshNextOptions,className:\"refresh-btn\",disabled:loadingNextOptions,children:\"\\u6362\\u4E00\\u6279\"})]}),loadingNextOptions?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u67E5\\u627E\\u62BC\\u97F5\\u53E5\\u5B50\\u4E2D...\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"options-list\",children:nextOptions.map((option,index)=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>selectNextSentence(option),className:selectedOption===option?'option-item selected':'option-item',children:[/*#__PURE__*/_jsx(\"div\",{className:\"option-text\",children:option.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:option.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(option.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(option.start_seconds)}),/*#__PURE__*/_jsx(\"span\",{className:`sentence-type ${analyzeSentenceType(option.text)}`,children:analyzeSentenceType(option.text)})]})]},index))}),nextOptions.length===0&&!loadingNextOptions&&/*#__PURE__*/_jsxs(\"div\",{className:\"no-options\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CA1\\u6709\\u627E\\u5230\\u5408\\u9002\\u7684\\u62BC\\u97F5\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startNewGame,children:\"\\u91CD\\u65B0\\u5F00\\u59CB\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-log-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u62BC\\u97F5\\u8BB0\\u5F55\"}),gameLog.length>0?/*#__PURE__*/_jsx(\"ol\",{className:\"game-log-list\",children:gameLog.map((log,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"log-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"log-text\",children:log.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"log-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:log.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(log.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(log.start_seconds)}),log.clipUrl&&/*#__PURE__*/_jsx(\"span\",{className:\"clip-info\",children:/*#__PURE__*/_jsx(\"i\",{className:\"video-icon\",children:\"\\uD83C\\uDFAC\"})})]})]},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"empty-log\",children:\"\\u5C1A\\u672A\\u5F00\\u59CB\\u6E38\\u620F\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-video-preview\",children:[isConfirmMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"confirm-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selected-sentence\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"selected-text\",children:selectedOption===null||selectedOption===void 0?void 0:selectedOption.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"selected-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:selectedOption===null||selectedOption===void 0?void 0:selectedOption.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(selectedOption===null||selectedOption===void 0?void 0:selectedOption.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(selectedOption===null||selectedOption===void 0?void 0:selectedOption.start_seconds)})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"video-preview\",children:isVideoLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-video\",children:\"\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):videoUrl?/*#__PURE__*/_jsx(\"video\",{controls:true,autoPlay:true,className:\"video-element\",src:videoUrl}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder\",children:\"\\u51C6\\u5907\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5...\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirm-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"confirm-btn\",onClick:gameStarted?confirmNextSentence:confirmStartSentence,disabled:isVideoLoading||!videoUrl,children:\"\\u786E\\u8BA4\\u9009\\u62E9\"}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-btn\",onClick:cancelSelection,children:\"\\u53D6\\u6D88\\u9009\\u62E9\"})]})]}),!isConfirmMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"video-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u89C6\\u9891\\u9884\\u89C8\"}),isVideoLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-video\",children:\"\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):videoUrl?/*#__PURE__*/_jsx(\"video\",{controls:true,autoPlay:true,className:\"video-element\",src:videoUrl}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder large\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"placeholder-text\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u4ECE\\u5DE6\\u4FA7\\u9009\\u62E9\\u4E00\\u4E2A\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u9009\\u62E9\\u540E\\u5C06\\u5728\\u6B64\\u5904\\u9884\\u89C8\\u89C6\\u9891\"})]})})]})]})]})]});};// 分析句子类型 - 全局辅助函数\nconst analyzeSentenceType=text=>{if(!text)return'普通句';// 判断是否为问句\nif(text.includes('?')||text.includes('？')||text.includes('吗')||text.includes('呢')){return'疑问句';}// 判断是否为命令句\nconst commandWords=['去','来','给我','快','立刻','马上','传'];if(commandWords.some(word=>text.includes(word))){return'命令句';}// 判断情感色彩\nconst positiveWords=['好','愿意','可以','是','对','喜欢','爱','高兴'];const negativeWords=['不','没','别','莫','拒绝','难过','恨','讨厌'];if(positiveWords.some(word=>text.includes(word))){return'积极句';}if(negativeWords.some(word=>text.includes(word))){return'消极句';}return'普通句';};// 奇妙对话组件\nconst DialogueGamePage=_ref4=>{let{API_BASE_URL,apiStatus,formatTime,formatEpisode,availableDramas,formatDramaName}=_ref4;const[gameStarted,setGameStarted]=useState(false);const[currentPrompts,setCurrentPrompts]=useState([]);const[loadingPrompts,setLoadingPrompts]=useState(false);const[gameLog,setGameLog]=useState([]);const[currentSentence,setCurrentSentence]=useState(null);const[nextOptions,setNextOptions]=useState([]);const[loadingNextOptions,setLoadingNextOptions]=useState(false);const[gameError,setGameError]=useState(null);const[videoUrl,setVideoUrl]=useState('');const[isVideoLoading,setIsVideoLoading]=useState(false);const[selectedOption,setSelectedOption]=useState(null);const[isExportingVideo,setIsExportingVideo]=useState(false);const[clipUrls,setClipUrls]=useState([]);const[isConfirmMode,setIsConfirmMode]=useState(false);const[selectedDramas,setSelectedDramas]=useState(availableDramas?availableDramas.map(drama=>drama.id):[]);// 处理剧集选择变化\nconst handleDramaChange=dramaId=>{if(selectedDramas.includes(dramaId)){// 如果已经选中，则从数组中移除\nsetSelectedDramas(selectedDramas.filter(id=>id!==dramaId));}else{// 如果未选中，则添加到数组\nsetSelectedDramas([...selectedDramas,dramaId]);}};// 选择/取消选择所有剧集\nconst toggleAllDramas=()=>{if(selectedDramas.length===availableDramas.length){// 如果已选择所有剧集，则取消选择所有\nsetSelectedDramas([]);}else{// 选择所有剧集\nsetSelectedDramas(availableDramas.map(drama=>drama.id));}};// 获取随机提示句子\nconst fetchRandomPrompts=async()=>{if(selectedDramas.length===0){setGameError('请至少选择一个剧集');return;}setLoadingPrompts(true);setGameError(null);try{const response=await axios.get(`${API_BASE_URL}/api/random_sentences`,{params:{count:8,drama_ids:selectedDramas.join(',')}});if(response.data&&response.data.results){setCurrentPrompts(response.data.results);}else{setGameError('获取随机句子失败');}}catch(error){console.error('获取随机句子错误:',error);setGameError('无法获取随机句子');}finally{setLoadingPrompts(false);}};// 刷新随机提示\nconst refreshRandomPrompts=()=>{if(apiStatus==='connected'&&!loadingPrompts){fetchRandomPrompts();}};// 生成视频片段\nconst generateVideoClip=async subtitle=>{setIsVideoLoading(true);setVideoUrl('');setGameError(null);try{const response=await axios.post(`${API_BASE_URL}/api/generate_clip`,{drama_id:subtitle.drama_id,episode:subtitle.episode,start_time:subtitle.start_seconds,end_time:subtitle.end_seconds,context_seconds:2});if(response.data&&response.data.clip_url){const clipUrl=`${API_BASE_URL}${response.data.clip_url}`;setVideoUrl(clipUrl);return clipUrl;}else{setGameError('生成视频片段失败');return null;}}catch(error){console.error('生成视频片段出错:',error);setGameError('视频服务出现错误，请确保视频文件存在且可访问');return null;}finally{setIsVideoLoading(false);}};// 选择开始句子\nconst selectStartSentence=prompt=>{setSelectedOption(prompt);setIsConfirmMode(true);generateVideoClip(prompt);};// 确认选择开始句子\nconst confirmStartSentence=()=>{const sentence=selectedOption;if(!sentence)return;setCurrentSentence(sentence);setGameLog([{...sentence,step:1,clipUrl:videoUrl}]);setClipUrls([...clipUrls,videoUrl]);setGameStarted(true);fetchDialogueResponses(sentence);setIsConfirmMode(false);setSelectedOption(null);};// 取消选择\nconst cancelSelection=()=>{setIsConfirmMode(false);setSelectedOption(null);setVideoUrl('');};// 选择下一个句子\nconst selectNextSentence=option=>{setSelectedOption(option);setIsConfirmMode(true);generateVideoClip(option);};// 确认选择下一个句子\nconst confirmNextSentence=()=>{const sentence=selectedOption;if(!sentence)return;setCurrentSentence(sentence);setGameLog([...gameLog,{...sentence,step:gameLog.length+1,clipUrl:videoUrl}]);setClipUrls([...clipUrls,videoUrl]);fetchDialogueResponses(sentence);setIsConfirmMode(false);setSelectedOption(null);};// 查找对话回应\nconst fetchDialogueResponses=async sentence=>{if(!sentence)return;setLoadingNextOptions(true);setGameError(null);try{// 确保有选择的剧集\nif(selectedDramas.length===0){setGameError('请至少选择一个剧集');setLoadingNextOptions(false);return;}const response=await axios.post(`${API_BASE_URL}/api/dialogue_responses`,{sentence_text:sentence.text,drama_id:sentence.drama_id,episode:sentence.episode,drama_ids:selectedDramas.join(',')});if(response.data&&response.data.results){setNextOptions(response.data.results);}else{setGameError('获取对话回应失败');}}catch(error){console.error('获取对话回应错误:',error);setGameError('无法获取对话回应');}finally{setLoadingNextOptions(false);}};// 获取最后一个有效字符（排除语气词）\nconst getLastValidChar=text=>{if(!text||text.length===0)return null;// 排除常见语气词\nconst cleanText=text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/,'');return cleanText.length>0?cleanText[cleanText.length-1]:null;};// 刷新下一步选项\nconst refreshNextOptions=()=>{if(currentSentence&&!loadingNextOptions){fetchDialogueResponses(currentSentence);}};// 回到上一步\nconst goBackOneStep=()=>{if(gameLog.length<=1){// 只有一步，回到选择开始句子\nsetGameStarted(false);setGameLog([]);setCurrentSentence(null);setNextOptions([]);setClipUrls([]);setVideoUrl('');fetchRandomPrompts();}else{// 移除最后一步\nconst newLog=[...gameLog];newLog.pop();setGameLog(newLog);// 更新当前句子和视频\nconst prevSentence=newLog[newLog.length-1];setCurrentSentence(prevSentence);// 更新剪辑URL列表\nconst newClipUrls=[...clipUrls];newClipUrls.pop();setClipUrls(newClipUrls);// 重新获取选项\nfetchDialogueResponses(prevSentence);}};// 合并视频并导出\nconst exportMergedVideo=async()=>{if(clipUrls.length===0)return;setIsExportingVideo(true);setGameError(null);try{const response=await axios.post(`${API_BASE_URL}/api/merge_clips`,{clip_urls:clipUrls});if(response.data&&response.data.merged_url){const mergedVideoUrl=`${API_BASE_URL}${response.data.merged_url}`;// 创建下载链接并强制触发下载\nconst link=document.createElement('a');link.href=mergedVideoUrl;link.download='对话视频.mp4';link.target='_blank';document.body.appendChild(link);// 必须添加到DOM中\nlink.click();setTimeout(()=>{document.body.removeChild(link);// 清理DOM\n},100);console.log('视频合并成功，已触发下载');}else{setGameError('视频合并失败: '+(response.data.error||'未知错误'));}}catch(error){var _error$response3,_error$response3$data;console.error('视频合并错误:',error);setGameError('视频合并服务出错: '+(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||error.message));}finally{setIsExportingVideo(false);}};// 开始新游戏\nconst startNewGame=()=>{setGameLog([]);fetchRandomPrompts();setGameStarted(false);setCurrentSentence(null);setNextOptions([]);setClipUrls([]);setVideoUrl('');setSelectedOption(null);setIsConfirmMode(false);};// 初始加载时获取随机提示\nuseEffect(()=>{if(apiStatus==='connected'){fetchRandomPrompts();}},[apiStatus]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chain-game-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drama-selector\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drama-selector-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u9009\\u62E9\\u5267\\u96C6\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"toggle-all-button\",onClick:toggleAllDramas,children:selectedDramas.length===availableDramas.length?'取消全选':'全选'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"drama-checkbox-container\",children:availableDramas.map(drama=>/*#__PURE__*/_jsxs(\"div\",{className:\"drama-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:`dialogue-drama-${drama.id}`,checked:selectedDramas.includes(drama.id),onChange:()=>handleDramaChange(drama.id)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`dialogue-drama-${drama.id}`,children:formatDramaName(drama)})]},drama.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startNewGame,className:\"new-game-btn\",disabled:apiStatus!=='connected',children:\"\\u65B0\\u6E38\\u620F\"}),gameStarted&&/*#__PURE__*/_jsx(\"button\",{onClick:goBackOneStep,className:\"back-btn\",disabled:gameLog.length===0,children:\"\\u4E0A\\u4E00\\u6B65\"}),clipUrls.length>1&&/*#__PURE__*/_jsx(\"button\",{onClick:exportMergedVideo,className:\"export-btn\",disabled:isExportingVideo,children:isExportingVideo?'导出中...':'导出对话视频'})]}),gameError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:gameError}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-candidates\",children:[!gameStarted?/*#__PURE__*/_jsxs(\"div\",{className:\"start-game-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u9009\\u62E9\\u5F00\\u59CB\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshRandomPrompts,className:\"refresh-btn\",disabled:loadingPrompts||apiStatus!=='connected',children:\"\\u6362\\u4E00\\u6279\"})]}),loadingPrompts?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u52A0\\u8F7D\\u63D0\\u793A\\u53E5\\u5B50\\u4E2D...\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"prompts-list\",children:currentPrompts.map((prompt,index)=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>selectStartSentence(prompt),className:selectedOption===prompt?'prompt-item selected':'prompt-item',children:[/*#__PURE__*/_jsx(\"div\",{className:\"prompt-text\",children:prompt.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"prompt-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:prompt.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(prompt.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(prompt.start_seconds)}),/*#__PURE__*/_jsx(\"span\",{className:`sentence-type ${analyzeSentenceType(prompt.text)}`,children:analyzeSentenceType(prompt.text)})]})]},index))}),currentPrompts.length===0&&!loadingPrompts&&/*#__PURE__*/_jsxs(\"div\",{className:\"empty-prompts\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CA1\\u6709\\u53EF\\u7528\\u7684\\u63D0\\u793A\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshRandomPrompts,children:\"\\u91CD\\u65B0\\u83B7\\u53D6\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"current-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u5F53\\u524D\\u53E5\\u5B50\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-sentence\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"current-text\",children:currentSentence===null||currentSentence===void 0?void 0:currentSentence.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:currentSentence===null||currentSentence===void 0?void 0:currentSentence.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(currentSentence===null||currentSentence===void 0?void 0:currentSentence.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(currentSentence===null||currentSentence===void 0?void 0:currentSentence.start_seconds)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"next-hint\",children:\"\\u67E5\\u627E\\u9002\\u5408\\u7684\\u56DE\\u5E94\\u53E5\\u5B50\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"next-options-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u56DE\\u5E94\\u9009\\u9879\"}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshNextOptions,className:\"refresh-btn\",disabled:loadingNextOptions,children:\"\\u6362\\u4E00\\u6279\"})]}),loadingNextOptions?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u67E5\\u627E\\u56DE\\u5E94\\u53E5\\u5B50\\u4E2D...\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"options-list\",children:nextOptions.map((option,index)=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>selectNextSentence(option),className:selectedOption===option?'option-item selected':'option-item',children:[/*#__PURE__*/_jsx(\"div\",{className:\"option-text\",children:option.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:option.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(option.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(option.start_seconds)}),/*#__PURE__*/_jsx(\"span\",{className:`sentence-type ${analyzeSentenceType(option.text)}`,children:analyzeSentenceType(option.text)}),option.score&&/*#__PURE__*/_jsxs(\"span\",{className:\"match-score\",children:[\"\\u5339\\u914D\\u5EA6: \",Math.round(option.score*100),\"%\"]})]})]},index))}),nextOptions.length===0&&!loadingNextOptions&&/*#__PURE__*/_jsxs(\"div\",{className:\"no-options\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CA1\\u6709\\u627E\\u5230\\u5408\\u9002\\u7684\\u56DE\\u5E94\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startNewGame,children:\"\\u91CD\\u65B0\\u5F00\\u59CB\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-log-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u5BF9\\u8BDD\\u8BB0\\u5F55\"}),gameLog.length>0?/*#__PURE__*/_jsx(\"ol\",{className:\"game-log-list\",children:gameLog.map((log,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"log-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"log-text\",children:log.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"log-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:log.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(log.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(log.start_seconds)}),log.clipUrl&&/*#__PURE__*/_jsx(\"span\",{className:\"clip-info\",children:/*#__PURE__*/_jsx(\"i\",{className:\"video-icon\",children:\"\\uD83C\\uDFAC\"})})]})]},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"empty-log\",children:\"\\u5C1A\\u672A\\u5F00\\u59CB\\u6E38\\u620F\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-video-preview\",children:[isConfirmMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"confirm-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selected-sentence\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"selected-text\",children:selectedOption===null||selectedOption===void 0?void 0:selectedOption.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"selected-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"drama-name\",children:formatDramaName({id:selectedOption===null||selectedOption===void 0?void 0:selectedOption.drama_id})}),/*#__PURE__*/_jsx(\"span\",{className:\"episode\",children:formatEpisode(selectedOption===null||selectedOption===void 0?void 0:selectedOption.episode)}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:formatTime(selectedOption===null||selectedOption===void 0?void 0:selectedOption.start_seconds)})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"video-preview\",children:isVideoLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-video\",children:\"\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):videoUrl?/*#__PURE__*/_jsx(\"video\",{controls:true,autoPlay:true,className:\"video-element\",src:videoUrl}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder\",children:\"\\u51C6\\u5907\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5...\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirm-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"confirm-btn\",onClick:gameStarted?confirmNextSentence:confirmStartSentence,disabled:isVideoLoading||!videoUrl,children:\"\\u786E\\u8BA4\\u9009\\u62E9\"}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-btn\",onClick:cancelSelection,children:\"\\u53D6\\u6D88\\u9009\\u62E9\"})]})]}),!isConfirmMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"video-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u89C6\\u9891\\u9884\\u89C8\"}),isVideoLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-video\",children:\"\\u751F\\u6210\\u89C6\\u9891\\u7247\\u6BB5\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"}):videoUrl?/*#__PURE__*/_jsx(\"video\",{controls:true,autoPlay:true,className:\"video-element\",src:videoUrl}):/*#__PURE__*/_jsx(\"div\",{className:\"video-placeholder large\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"placeholder-text\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u4ECE\\u5DE6\\u4FA7\\u9009\\u62E9\\u4E00\\u4E2A\\u53E5\\u5B50\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u9009\\u62E9\\u540E\\u5C06\\u5728\\u6B64\\u5904\\u9884\\u89C8\\u89C6\\u9891\"})]})})]})]})]})]});};function App(){const API_BASE_URL='http://localhost:8089';// 搜索页面状态\nconst[query,setQuery]=useState('');const[searchResults,setSearchResults]=useState([]);const[loading,setLoading]=useState(false);const[apiStatus,setApiStatus]=useState('unknown');const[error,setError]=useState(null);const[selectedResult,setSelectedResult]=useState(null);const[videoUrl,setVideoUrl]=useState('');const[isVideoLoading,setIsVideoLoading]=useState(false);const[currentPage,setCurrentPage]=useState('search');// 剧集相关状态\nconst[availableDramas,setAvailableDramas]=useState([]);const[selectedDramas,setSelectedDramas]=useState([]);const[dramaStats,setDramaStats]=useState({});useEffect(()=>{checkApiStatus();},[]);// 获取API状态并加载可用剧集\nconst checkApiStatus=async()=>{try{const response=await axios.get(`${API_BASE_URL}/api/status`);if(response.data&&response.data.status==='ok'){setApiStatus('connected');// 保存剧集信息\nif(response.data.dramas){setAvailableDramas(response.data.dramas);// 默认选择所有可用剧集\nsetSelectedDramas(response.data.dramas.map(drama=>drama.id));}// 保存剧集统计信息\nif(response.data.drama_stats){setDramaStats(response.data.drama_stats);}}else{setApiStatus('error');setError('API服务状态异常');}}catch(error){console.error('API状态检查错误:',error);setApiStatus('disconnected');setError('无法连接到API服务，请确保服务器已启动');}};const handleSearch=async e=>{e.preventDefault();setLoading(true);setError(null);setSearchResults([]);setSelectedResult(null);setVideoUrl('');if(!query.trim()){setError('请输入搜索关键词');setLoading(false);return;}try{const response=await axios.get(`${API_BASE_URL}/api/search`,{params:{query:query,drama_ids:selectedDramas}});if(response.data&&response.data.results){setSearchResults(response.data.results);if(response.data.results.length===0){setError('没有找到匹配的结果');}}else{setError('搜索失败');}}catch(error){console.error('搜索错误:',error);setError('搜索请求失败，请确保API服务正常运行');}finally{setLoading(false);}};const handleGenerateClip=async result=>{if(isVideoLoading)return;setSelectedResult(result);setIsVideoLoading(true);setVideoUrl('');setError(null);try{const response=await axios.post(`${API_BASE_URL}/api/generate_clip`,{drama_id:result.drama_id,episode:result.episode,start_time:result.start_seconds,end_time:result.end_seconds,context_seconds:2});if(response.data&&response.data.clip_url){const url=`${API_BASE_URL}${response.data.clip_url}`;setVideoUrl(url);}else{setError('无法生成视频片段');}}catch(error){console.error('生成视频片段失败:',error);setError('请求失败，请检查网络连接');}finally{setIsVideoLoading(false);}};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=Math.floor(seconds%60);return`${mins}:${secs.toString().padStart(2,'0')}`;};const formatEpisode=episode=>{// 从集数名称中提取数字\nconst match=episode.match(/\\d+/);if(match){return`第${match[0]}集`;}return episode;};const formatDramaName=drama=>{// 根据drama_id获取剧名\nif(!drama||!drama.id)return'未知剧集';// 如果传入的是完整drama对象，则直接返回名称\nif(drama.name)return drama.name;// 否则在availableDramas中查找\nconst foundDrama=availableDramas.find(d=>d.id===drama.id);return foundDrama?foundDrama.name:drama.id;};const highlightText=(text,query)=>{if(!query||!text)return text;// 简单的字符串替换，为匹配的文本添加高亮标签\nconst escapedQuery=query.replace(/[.*+?^${}()|[\\]\\\\]/g,'\\\\$&');const regex=new RegExp(escapedQuery,'gi');return text.replace(regex,match=>`<span class=\"highlight\">${match}</span>`);};const switchPage=page=>{setCurrentPage(page);setError(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u5B57\\u5E55\\u641C\\u7D22\\u7CFB\\u7EDF\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"api-status\",children:[\"API\\u670D\\u52A1\\u72B6\\u6001:\",apiStatus==='connected'?/*#__PURE__*/_jsx(\"span\",{className:\"status-connected\",children:\"\\u5DF2\\u8FDE\\u63A5\"}):apiStatus==='disconnected'?/*#__PURE__*/_jsx(\"span\",{className:\"status-disconnected\",children:\"\\u672A\\u8FDE\\u63A5\"}):/*#__PURE__*/_jsx(\"span\",{className:\"status-checking\",children:\"\\u68C0\\u67E5\\u4E2D...\"})]}),/*#__PURE__*/_jsx(\"nav\",{className:\"main-nav\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:currentPage==='search'?'active':'',children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>switchPage('search'),children:\"\\u5B57\\u5E55\\u641C\\u7D22\"})}),/*#__PURE__*/_jsx(\"li\",{className:currentPage==='chain-game'?'active':'',children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>switchPage('chain-game'),children:\"\\u5B57\\u5E55\\u63A5\\u9F99\"})}),/*#__PURE__*/_jsx(\"li\",{className:currentPage==='rhyme-game'?'active':'',children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>switchPage('rhyme-game'),children:\"\\u5B57\\u5E55\\u62BC\\u97F5\"})}),/*#__PURE__*/_jsx(\"li\",{className:currentPage==='dialogue-game'?'active':'',children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>switchPage('dialogue-game'),children:\"\\u5947\\u5999\\u5BF9\\u8BDD\"})})]})})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"App-main\",children:[currentPage==='search'&&/*#__PURE__*/_jsx(SearchPage,{API_BASE_URL:API_BASE_URL,query:query,setQuery:setQuery,searchResults:searchResults,setSearchResults:setSearchResults,loading:loading,setLoading:setLoading,apiStatus:apiStatus,error:error,setError:setError,selectedResult:selectedResult,setSelectedResult:setSelectedResult,videoUrl:videoUrl,setVideoUrl:setVideoUrl,isVideoLoading:isVideoLoading,setIsVideoLoading:setIsVideoLoading,handleSearch:handleSearch,handleGenerateClip:handleGenerateClip,formatTime:formatTime,formatEpisode:formatEpisode,highlightText:highlightText,availableDramas:availableDramas,selectedDramas:selectedDramas,setSelectedDramas:setSelectedDramas,formatDramaName:formatDramaName}),currentPage==='chain-game'&&/*#__PURE__*/_jsx(ChainGamePage,{API_BASE_URL:API_BASE_URL,apiStatus:apiStatus,formatTime:formatTime,formatEpisode:formatEpisode,availableDramas:availableDramas,formatDramaName:formatDramaName}),currentPage==='rhyme-game'&&/*#__PURE__*/_jsx(RhymeGamePage,{API_BASE_URL:API_BASE_URL,apiStatus:apiStatus,formatTime:formatTime,formatEpisode:formatEpisode,availableDramas:availableDramas,formatDramaName:formatDramaName}),currentPage==='dialogue-game'&&/*#__PURE__*/_jsx(DialogueGamePage,{API_BASE_URL:API_BASE_URL,apiStatus:apiStatus,formatTime:formatTime,formatEpisode:formatEpisode,availableDramas:availableDramas,formatDramaName:formatDramaName})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"App-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u5B57\\u5E55\\u641C\\u7D22\\u7CFB\\u7EDF \\xA9 2023\"})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SearchPage","_ref","API_BASE_URL","query","setQuery","searchResults","setSearchResults","loading","setLoading","apiStatus","error","setError","selectedResult","setSelectedResult","videoUrl","setVideoUrl","isVideoLoading","setIsVideoLoading","handleSearch","handleGenerateClip","formatTime","formatEpisode","highlightText","availableDramas","selectedDramas","setSelectedDramas","formatDramaName","handleDramaChange","dramaId","includes","filter","id","toggleAllDramas","length","map","drama","children","className","onSubmit","type","onClick","checked","onChange","htmlFor","value","e","target","placeholder","disabled","result","index","drama_id","episode","start_seconds","end_seconds","dangerouslySetInnerHTML","__html","text","controls","autoPlay","src","ChainGamePage","_ref2","gameStarted","setGameStarted","currentPrompts","setCurrentPrompts","loadingPrompts","setLoadingPrompts","gameLog","setGameLog","currentSentence","setCurrentSentence","nextOptions","setNextOptions","loadingNextOptions","setLoadingNextOptions","gameError","setGameError","selectedOption","setSelectedOption","isExportingVideo","setIsExportingVideo","clipUrls","setClipUrls","isConfirmMode","setIsConfirmMode","fetchRandomPrompts","response","get","params","count","drama_ids","join","data","results","console","refreshRandomPrompts","generateVideoClip","subtitle","post","start_time","end_time","context_seconds","clip_url","clipUrl","selectStartSentence","prompt","confirmStartSentence","sentence","step","fetchNextOptions","cancelSelection","selectNextSentence","option","confirmNextSentence","lastChar","getLastValidChar","log","dramaIdsParam","fetch","encodeURIComponent","ok","Error","status","json","filteredResults","item","cleanText","replace","fallbackResponse","fallbackData","manualFilteredResults","startsWith","shuffled","sort","Math","random","slice","message","refreshNextOptions","goBackOneStep","newLog","pop","prevSentence","newClipUrls","exportMergedVideo","clip_urls","merged_url","mergedVideoUrl","link","document","createElement","href","download","body","appendChild","click","setTimeout","removeChild","_error$response","_error$response$data","startNewGame","analyzeSentenceType","RhymeGamePage","_ref3","fetchRhymingOptions","min_length","max_length","limit","_error$response2","_error$response2$data","commandWords","some","word","positiveWords","negativeWords","DialogueGamePage","_ref4","fetchDialogueResponses","sentence_text","_error$response3","_error$response3$data","score","round","App","setApiStatus","currentPage","setCurrentPage","setAvailableDramas","dramaStats","setDramaStats","checkApiStatus","dramas","drama_stats","preventDefault","trim","url","seconds","mins","floor","secs","toString","padStart","match","name","foundDrama","find","d","escapedQuery","regex","RegExp","switchPage","page"],"sources":["/Users/h0270/Documents/code/ai-vedio/create_video/subtitle-search-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n// 子页面组件\nconst SearchPage = ({ \n  API_BASE_URL, \n  query, \n  setQuery, \n  searchResults,\n  setSearchResults,\n  loading,\n  setLoading,\n  apiStatus,\n  error,\n  setError,\n  selectedResult,\n  setSelectedResult,\n  videoUrl,\n  setVideoUrl,\n  isVideoLoading,\n  setIsVideoLoading,\n  handleSearch,\n  handleGenerateClip,\n  formatTime,\n  formatEpisode,\n  highlightText,\n  availableDramas,\n  selectedDramas,\n  setSelectedDramas,\n  formatDramaName\n}) => {\n  // 处理剧集选择变化\n  const handleDramaChange = (dramaId) => {\n    if (selectedDramas.includes(dramaId)) {\n      // 如果已经选中，则从数组中移除\n      setSelectedDramas(selectedDramas.filter(id => id !== dramaId));\n    } else {\n      // 如果未选中，则添加到数组\n      setSelectedDramas([...selectedDramas, dramaId]);\n    }\n  };\n\n  // 选择/取消选择所有剧集\n  const toggleAllDramas = () => {\n    if (selectedDramas.length === availableDramas.length) {\n      // 如果已选择所有剧集，则取消选择所有\n      setSelectedDramas([]);\n    } else {\n      // 选择所有剧集\n      setSelectedDramas(availableDramas.map(drama => drama.id));\n    }\n  };\n\n  return (\n    <>\n      <section className=\"search-area\">\n        <form onSubmit={handleSearch}>\n          <div className=\"drama-selector\">\n            <div className=\"drama-selector-header\">\n              <h3>选择剧集</h3>\n              <button \n                type=\"button\" \n                className=\"toggle-all-button\"\n                onClick={toggleAllDramas}\n              >\n                {selectedDramas.length === availableDramas.length ? '取消全选' : '全选'}\n              </button>\n            </div>\n            <div className=\"drama-checkbox-container\">\n              {availableDramas.map(drama => (\n                <div className=\"drama-checkbox\" key={drama.id}>\n                  <input\n                    type=\"checkbox\"\n                    id={`drama-${drama.id}`}\n                    checked={selectedDramas.includes(drama.id)}\n                    onChange={() => handleDramaChange(drama.id)}\n                  />\n                  <label htmlFor={`drama-${drama.id}`}>\n                    {formatDramaName(drama)}\n                  </label>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"search-box\">\n            <input\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"输入要搜索的字幕内容...\"\n              disabled={apiStatus !== 'connected'}\n            />\n            <button \n              type=\"submit\" \n              disabled={loading || apiStatus !== 'connected' || selectedDramas.length === 0}\n            >\n              {loading ? '搜索中...' : '搜索'}\n            </button>\n          </div>\n        </form>\n\n        {error && <div className=\"error-message\">{error}</div>}\n      </section>\n\n      <div className=\"content-area\">\n        <section className=\"results-area\">\n          <h2>搜索结果 {searchResults.length > 0 && `(${searchResults.length})`}</h2>\n          \n          {loading ? (\n            <div className=\"loading\">搜索中，请稍候...</div>\n          ) : (\n            <ul className=\"results-list\">\n              {searchResults.map((result, index) => (\n                <li \n                  key={index} \n                  className={selectedResult === result ? 'selected' : ''}\n                  onClick={() => handleGenerateClip(result)}\n                >\n                  <div className=\"result-header\">\n                    <span className=\"drama-name\">{formatDramaName({id: result.drama_id})}</span>\n                    <span className=\"episode\">{formatEpisode(result.episode)}</span>\n                    <span className=\"time\">{formatTime(result.start_seconds)} - {formatTime(result.end_seconds)}</span>\n                  </div>\n                  <div \n                    className=\"subtitle-text\"\n                    dangerouslySetInnerHTML={{__html: highlightText(result.text, query)}}\n                  />\n                </li>\n              ))}\n            </ul>\n          )}\n        </section>\n\n        <section className=\"video-area\">\n          <h2>视频播放</h2>\n          {selectedResult ? (\n            <div className=\"video-player\">\n              <div className=\"video-info\">\n                <p><strong>剧集:</strong> {formatDramaName({id: selectedResult.drama_id})}</p>\n                <p><strong>集数:</strong> {formatEpisode(selectedResult.episode)}</p>\n                <p><strong>时间段:</strong> {formatTime(selectedResult.start_seconds)} - {formatTime(selectedResult.end_seconds)}</p>\n                <p><strong>字幕内容:</strong> {selectedResult.text}</p>\n              </div>\n              \n              {isVideoLoading ? (\n                <div className=\"loading-video\">生成视频片段中，请稍候...</div>\n              ) : videoUrl ? (\n                <video \n                  controls \n                  autoPlay \n                  className=\"video-element\"\n                  src={videoUrl}\n                />\n              ) : (\n                <div className=\"video-placeholder\">\n                  {selectedResult ? '准备生成视频片段...' : '请从左侧选择一个搜索结果'}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"video-placeholder\">\n              请从左侧选择一个搜索结果\n            </div>\n          )}\n        </section>\n      </div>\n    </>\n  );\n};\n\n// 成语接龙游戏组件\nconst ChainGamePage = ({ \n  API_BASE_URL, \n  apiStatus,\n  formatTime,\n  formatEpisode,\n  availableDramas,\n  formatDramaName\n}) => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentPrompts, setCurrentPrompts] = useState([]);\n  const [loadingPrompts, setLoadingPrompts] = useState(false);\n  const [gameLog, setGameLog] = useState([]);\n  const [currentSentence, setCurrentSentence] = useState(null);\n  const [nextOptions, setNextOptions] = useState([]);\n  const [loadingNextOptions, setLoadingNextOptions] = useState(false);\n  const [gameError, setGameError] = useState(null);\n  const [videoUrl, setVideoUrl] = useState('');\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isExportingVideo, setIsExportingVideo] = useState(false);\n  const [clipUrls, setClipUrls] = useState([]);\n  const [isConfirmMode, setIsConfirmMode] = useState(false);\n  const [selectedDramas, setSelectedDramas] = useState(\n    availableDramas ? availableDramas.map(drama => drama.id) : []\n  );\n\n  // 处理剧集选择变化\n  const handleDramaChange = (dramaId) => {\n    if (selectedDramas.includes(dramaId)) {\n      // 如果已经选中，则从数组中移除\n      setSelectedDramas(selectedDramas.filter(id => id !== dramaId));\n    } else {\n      // 如果未选中，则添加到数组\n      setSelectedDramas([...selectedDramas, dramaId]);\n    }\n  };\n\n  // 选择/取消选择所有剧集\n  const toggleAllDramas = () => {\n    if (selectedDramas.length === availableDramas.length) {\n      // 如果已选择所有剧集，则取消选择所有\n      setSelectedDramas([]);\n    } else {\n      // 选择所有剧集\n      setSelectedDramas(availableDramas.map(drama => drama.id));\n    }\n  };\n\n  // 获取随机提示句子\n  const fetchRandomPrompts = async () => {\n    if (selectedDramas.length === 0) {\n      setGameError('请至少选择一个剧集');\n      return;\n    }\n    \n    setLoadingPrompts(true);\n    setGameError(null);\n    \n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/random_sentences`, {\n        params: {\n          count: 8,\n          drama_ids: selectedDramas.join(',')\n        }\n      });\n      \n      if (response.data && response.data.results) {\n        setCurrentPrompts(response.data.results);\n      } else {\n        setGameError('获取随机句子失败');\n      }\n    } catch (error) {\n      console.error('获取随机句子错误:', error);\n      setGameError('无法获取随机句子');\n    } finally {\n      setLoadingPrompts(false);\n    }\n  };\n\n  // 刷新随机提示\n  const refreshRandomPrompts = () => {\n    if (apiStatus === 'connected' && !loadingPrompts) {\n      fetchRandomPrompts();\n    }\n  };\n\n  // 生成视频片段\n  const generateVideoClip = async (subtitle) => {\n    setIsVideoLoading(true);\n    setVideoUrl('');\n    setGameError(null);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/generate_clip`, {\n        drama_id: subtitle.drama_id,\n        episode: subtitle.episode,\n        start_time: subtitle.start_seconds,\n        end_time: subtitle.end_seconds,\n        context_seconds: 2\n      });\n\n      if (response.data && response.data.clip_url) {\n        const clipUrl = `${API_BASE_URL}${response.data.clip_url}`;\n        setVideoUrl(clipUrl);\n        return clipUrl;\n      } else {\n        setGameError('生成视频片段失败');\n        return null;\n      }\n    } catch (error) {\n      console.error('生成视频片段出错:', error);\n      setGameError('视频服务出现错误，请确保视频文件存在且可访问');\n      return null;\n    } finally {\n      setIsVideoLoading(false);\n    }\n  };\n\n  // 选择开始句子\n  const selectStartSentence = (prompt) => {\n    setSelectedOption(prompt);\n    setIsConfirmMode(true);\n    generateVideoClip(prompt);\n  };\n\n  // 确认选择开始句子\n  const confirmStartSentence = () => {\n    const sentence = selectedOption;\n    if (!sentence) return;\n    \n    setCurrentSentence(sentence);\n    setGameLog([{...sentence, step: 1, clipUrl: videoUrl}]);\n    setClipUrls([...clipUrls, videoUrl]);\n    setGameStarted(true);\n    fetchNextOptions(sentence.text);\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n  };\n\n  // 取消选择\n  const cancelSelection = () => {\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n    setVideoUrl('');\n  };\n  \n  // 选择下一个句子\n  const selectNextSentence = (option) => {\n    setSelectedOption(option);\n    setIsConfirmMode(true);\n    generateVideoClip(option);\n  };\n\n  // 确认选择下一个句子\n  const confirmNextSentence = () => {\n    const sentence = selectedOption;\n    if (!sentence) return;\n    \n    setCurrentSentence(sentence);\n    setGameLog([...gameLog, {...sentence, step: gameLog.length + 1, clipUrl: videoUrl}]);\n    setClipUrls([...clipUrls, videoUrl]);\n    fetchNextOptions(sentence.text);\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n  };\n\n  // 获取下一步选项\n  const fetchNextOptions = async (text) => {\n    if (!text) return;\n    \n    setLoadingNextOptions(true);\n    setGameError(null);\n    \n    try {\n      // 获取最后一个字，排除语气词\n      let lastChar = getLastValidChar(text);\n      \n      if (!lastChar) {\n        setGameError('无法识别有效的结尾字符');\n        setLoadingNextOptions(false);\n        return;\n      }\n      \n      console.log(`正在查找以\"${lastChar}\"开头的句子...`);\n      \n      // 确保有选择的剧集\n      if (selectedDramas.length === 0) {\n        setGameError('请至少选择一个剧集');\n        setLoadingNextOptions(false);\n        return;\n      }\n      \n      const dramaIdsParam = selectedDramas.join(',');\n      const response = await fetch(`${API_BASE_URL}/api/search?query=${encodeURIComponent(`^${lastChar}`)}&use_regex=true&drama_ids=${dramaIdsParam}`);\n      \n      if (!response.ok) {\n        throw new Error(`API请求失败: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data && data.results) {\n        console.log(`API返回了 ${data.results.length} 条结果`);\n        \n        // 过滤结果，保留3-8个字的句子\n        const filteredResults = data.results.filter(item => {\n          const cleanText = item.text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/, '');\n          return cleanText.length >= 3 && cleanText.length <= 8;\n        });\n        \n        console.log(`过滤后还有 ${filteredResults.length} 条结果`);\n        \n        if (filteredResults.length === 0) {\n          // 如果没有找到结果，尝试不使用正则表达式的精确查询\n          console.log(`尝试使用精确查询搜索以\"${lastChar}\"开头的句子`);\n          const fallbackResponse = await fetch(`${API_BASE_URL}/api/search?query=${encodeURIComponent(lastChar)}&drama_ids=${dramaIdsParam}`);\n          const fallbackData = await fallbackResponse.json();\n          \n          if (fallbackData && fallbackData.results) {\n            console.log(`精确查询返回了 ${fallbackData.results.length} 条结果`);\n            // 手动过滤以lastChar开头的结果\n            const manualFilteredResults = fallbackData.results.filter(item => {\n              return item.text.startsWith(lastChar) && \n                     item.text.length >= 3 && \n                     item.text.length <= 8;\n            });\n            \n            if (manualFilteredResults.length > 0) {\n              console.log(`手动过滤后找到 ${manualFilteredResults.length} 条结果`);\n              // 随机选择最多8个结果\n              const shuffled = [...manualFilteredResults].sort(() => 0.5 - Math.random());\n              setNextOptions(shuffled.slice(0, 8));\n              setLoadingNextOptions(false);\n              return;\n            }\n          }\n          \n          setGameError(`没有找到以\"${lastChar}\"开头的句子`);\n        } else {\n          // 随机选择最多8个结果\n          const shuffled = [...filteredResults].sort(() => 0.5 - Math.random());\n          setNextOptions(shuffled.slice(0, 8));\n        }\n      } else {\n        setGameError('获取接续句子失败');\n      }\n    } catch (error) {\n      console.error('获取接续句子错误:', error);\n      setGameError(`查询错误: ${error.message}`);\n    } finally {\n      setLoadingNextOptions(false);\n    }\n  };\n\n  // 获取最后一个有效字符（排除语气词）\n  const getLastValidChar = (text) => {\n    if (!text || text.length === 0) return null;\n    \n    // 排除常见语气词\n    const cleanText = text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/, '');\n    return cleanText.length > 0 ? cleanText[cleanText.length - 1] : null;\n  };\n\n  // 刷新下一步选项\n  const refreshNextOptions = () => {\n    if (currentSentence && !loadingNextOptions) {\n      fetchNextOptions(currentSentence.text);\n    }\n  };\n\n  // 回到上一步\n  const goBackOneStep = () => {\n    if (gameLog.length <= 1) {\n      // 只有一步，回到选择开始句子\n      setGameStarted(false);\n      setGameLog([]);\n      setCurrentSentence(null);\n      setNextOptions([]);\n      setClipUrls([]);\n      setVideoUrl('');\n      fetchRandomPrompts();\n    } else {\n      // 移除最后一步\n      const newLog = [...gameLog];\n      newLog.pop();\n      setGameLog(newLog);\n      \n      // 更新当前句子和视频\n      const prevSentence = newLog[newLog.length - 1];\n      setCurrentSentence(prevSentence);\n      \n      // 更新剪辑URL列表\n      const newClipUrls = [...clipUrls];\n      newClipUrls.pop();\n      setClipUrls(newClipUrls);\n      \n      // 重新获取选项\n      fetchNextOptions(prevSentence.text);\n    }\n  };\n\n  // 合并视频并导出\n  const exportMergedVideo = async () => {\n    if (clipUrls.length === 0) return;\n    \n    setIsExportingVideo(true);\n    setGameError(null);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/merge_clips`, {\n        clip_urls: clipUrls\n      });\n      \n      if (response.data && response.data.merged_url) {\n        const mergedVideoUrl = `${API_BASE_URL}${response.data.merged_url}`;\n        \n        // 创建下载链接并强制触发下载\n        const link = document.createElement('a');\n        link.href = mergedVideoUrl;\n        link.download = '接龙视频.mp4';\n        link.target = '_blank';\n        document.body.appendChild(link); // 必须添加到DOM中\n        link.click();\n        setTimeout(() => {\n          document.body.removeChild(link); // 清理DOM\n        }, 100);\n        \n        console.log('视频合并成功，已触发下载');\n      } else {\n        setGameError('视频合并失败: ' + (response.data.error || '未知错误'));\n      }\n    } catch (error) {\n      console.error('视频合并错误:', error);\n      setGameError('视频合并服务出错: ' + (error.response?.data?.error || error.message));\n    } finally {\n      setIsExportingVideo(false);\n    }\n  };\n\n  // 开始新游戏\n  const startNewGame = () => {\n    setGameLog([]);\n    fetchRandomPrompts();\n    setGameStarted(false);\n    setCurrentSentence(null);\n    setNextOptions([]);\n    setClipUrls([]);\n    setVideoUrl('');\n    setSelectedOption(null);\n    setIsConfirmMode(false);\n  };\n\n  // 初始加载时获取随机提示\n  useEffect(() => {\n    if (apiStatus === 'connected') {\n      fetchRandomPrompts();\n    }\n  }, [apiStatus]);\n\n  return (\n    <div className=\"chain-game-container\">\n      <div className=\"drama-selector\">\n        <div className=\"drama-selector-header\">\n          <h3>选择剧集</h3>\n          <button \n            type=\"button\" \n            className=\"toggle-all-button\"\n            onClick={toggleAllDramas}\n          >\n            {selectedDramas.length === availableDramas.length ? '取消全选' : '全选'}\n          </button>\n        </div>\n        <div className=\"drama-checkbox-container\">\n          {availableDramas.map(drama => (\n            <div className=\"drama-checkbox\" key={drama.id}>\n              <input\n                type=\"checkbox\"\n                id={`chain-drama-${drama.id}`}\n                checked={selectedDramas.includes(drama.id)}\n                onChange={() => handleDramaChange(drama.id)}\n              />\n              <label htmlFor={`chain-drama-${drama.id}`}>\n                {formatDramaName(drama)}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"game-controls\">\n        <button \n          onClick={startNewGame}\n          className=\"new-game-btn\"\n          disabled={apiStatus !== 'connected'}\n        >\n          新游戏\n        </button>\n        {gameStarted && (\n          <button \n            onClick={goBackOneStep}\n            className=\"back-btn\"\n            disabled={gameLog.length === 0}\n          >\n            上一步\n          </button>\n        )}\n        {clipUrls.length > 1 && (\n          <button\n            onClick={exportMergedVideo}\n            className=\"export-btn\"\n            disabled={isExportingVideo}\n          >\n            {isExportingVideo ? '导出中...' : '导出接龙视频'}\n          </button>\n        )}\n      </div>\n      \n      {gameError && <div className=\"error-message\">{gameError}</div>}\n      \n      <div className=\"game-content\">\n        {/* 左侧：候选词区域 */}\n        <div className=\"game-candidates\">\n          {!gameStarted ? (\n            <div className=\"start-game-section\">\n              <div className=\"section-header\">\n                <h2>选择开始句子</h2>\n                <button \n                  onClick={refreshRandomPrompts}\n                  className=\"refresh-btn\"\n                  disabled={loadingPrompts || apiStatus !== 'connected'}\n                >\n                  换一批\n                </button>\n              </div>\n              \n              {loadingPrompts ? (\n                <div className=\"loading\">加载提示句子中...</div>\n              ) : (\n                <ul className=\"prompts-list\">\n                  {currentPrompts.map((prompt, index) => (\n                    <li \n                      key={index} \n                      onClick={() => selectStartSentence(prompt)}\n                      className={selectedOption === prompt ? 'prompt-item selected' : 'prompt-item'}\n                    >\n                      <div className=\"prompt-text\">{prompt.text}</div>\n                      <div className=\"prompt-info\">\n                        <span className=\"drama-name\">{formatDramaName({id: prompt.drama_id})}</span>\n                        <span className=\"episode\">{formatEpisode(prompt.episode)}</span>\n                        <span className=\"time\">{formatTime(prompt.start_seconds)}</span>\n                        <span className={`sentence-type ${analyzeSentenceType(prompt.text)}`}>{analyzeSentenceType(prompt.text)}</span>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              )}\n              \n              {currentPrompts.length === 0 && !loadingPrompts && (\n                <div className=\"empty-prompts\">\n                  <p>没有可用的提示句子</p>\n                  <button onClick={refreshRandomPrompts}>重新获取</button>\n                </div>\n              )}\n            </div>\n          ) : (\n            <>\n              <div className=\"current-section\">\n                <h2>当前句子</h2>\n                <div className=\"current-sentence\">\n                  <div className=\"current-text\">{currentSentence?.text}</div>\n                  <div className=\"current-info\">\n                    <span className=\"drama-name\">{formatDramaName({id: currentSentence?.drama_id})}</span>\n                    <span className=\"episode\">{formatEpisode(currentSentence?.episode)}</span>\n                    <span className=\"time\">{formatTime(currentSentence?.start_seconds)}</span>\n                  </div>\n                  <div className=\"next-hint\">\n                    下一句需以「{getLastValidChar(currentSentence?.text)}」字开头\n                  </div>\n                </div>\n              </div>\n                \n              <div className=\"next-options-section\">\n                <div className=\"section-header\">\n                  <h2>可选接续</h2>\n                  <button \n                    onClick={refreshNextOptions}\n                    className=\"refresh-btn\"\n                    disabled={loadingNextOptions}\n                  >\n                    换一批\n                  </button>\n                </div>\n                \n                {loadingNextOptions ? (\n                  <div className=\"loading\">加载接续句子中...</div>\n                ) : (\n                  <ul className=\"options-list\">\n                    {nextOptions.map((option, index) => (\n                      <li \n                        key={index}\n                        onClick={() => selectNextSentence(option)}\n                        className={selectedOption === option ? 'option-item selected' : 'option-item'}\n                      >\n                        <div className=\"option-text\">{option.text}</div>\n                        <div className=\"option-info\">\n                          <span className=\"drama-name\">{formatDramaName({id: option.drama_id})}</span>\n                          <span className=\"episode\">{formatEpisode(option.episode)}</span>\n                          <span className=\"time\">{formatTime(option.start_seconds)}</span>\n                          <span className={`sentence-type ${analyzeSentenceType(option.text)}`}>{analyzeSentenceType(option.text)}</span>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n                {nextOptions.length === 0 && !loadingNextOptions && (\n                  <div className=\"no-options\">\n                    <p>没有找到合适的接续句子</p>\n                    <button onClick={startNewGame}>重新开始</button>\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n\n          {/* 接龙记录 */}\n          <div className=\"game-log-section\">\n            <h2>接龙记录</h2>\n            {gameLog.length > 0 ? (\n              <ol className=\"game-log-list\">\n                {gameLog.map((log, index) => (\n                  <li key={index} className=\"log-item\">\n                    <div className=\"log-text\">{log.text}</div>\n                    <div className=\"log-info\">\n                      <span className=\"drama-name\">{formatDramaName({id: log.drama_id})}</span>\n                      <span className=\"episode\">{formatEpisode(log.episode)}</span>\n                      <span className=\"time\">{formatTime(log.start_seconds)}</span>\n                      {log.clipUrl && (\n                        <span className=\"clip-info\">\n                          <i className=\"video-icon\">🎬</i>\n                        </span>\n                      )}\n                    </div>\n                  </li>\n                ))}\n              </ol>\n            ) : (\n              <div className=\"empty-log\">尚未开始游戏</div>\n            )}\n          </div>\n        </div>\n\n        {/* 右侧：视频预览区域 */}\n        <div className=\"game-video-preview\">\n          {isConfirmMode && (\n            <div className=\"confirm-section\">\n              <div className=\"selected-sentence\">\n                <div className=\"selected-text\">{selectedOption?.text}</div>\n                <div className=\"selected-info\">\n                  <span className=\"drama-name\">{formatDramaName({id: selectedOption?.drama_id})}</span>\n                  <span className=\"episode\">{formatEpisode(selectedOption?.episode)}</span>\n                  <span className=\"time\">{formatTime(selectedOption?.start_seconds)}</span>\n                </div>\n              </div>\n              \n              <div className=\"video-preview\">\n                {isVideoLoading ? (\n                  <div className=\"loading-video\">生成视频片段中，请稍候...</div>\n                ) : videoUrl ? (\n                  <video \n                    controls \n                    autoPlay \n                    className=\"video-element\"\n                    src={videoUrl}\n                  />\n                ) : (\n                  <div className=\"video-placeholder\">准备生成视频片段...</div>\n                )}\n              </div>\n              \n              <div className=\"confirm-buttons\">\n                <button \n                  className=\"confirm-btn\"\n                  onClick={gameStarted ? confirmNextSentence : confirmStartSentence}\n                  disabled={isVideoLoading || !videoUrl}\n                >\n                  确认选择\n                </button>\n                <button \n                  className=\"cancel-btn\"\n                  onClick={cancelSelection}\n                >\n                  取消选择\n                </button>\n              </div>\n            </div>\n          )}\n          {!isConfirmMode && (\n            <div className=\"video-section\">\n              <h2>视频预览</h2>\n              {isVideoLoading ? (\n                <div className=\"loading-video\">生成视频片段中，请稍候...</div>\n              ) : videoUrl ? (\n                <video \n                  controls \n                  autoPlay \n                  className=\"video-element\"\n                  src={videoUrl}\n                />\n              ) : (\n                <div className=\"video-placeholder large\">\n                  <div className=\"placeholder-text\">\n                    <p>请从左侧选择一个句子</p>\n                    <p>选择后将在此处预览视频</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 押韵游戏组件\nconst RhymeGamePage = ({ \n  API_BASE_URL, \n  apiStatus,\n  formatTime,\n  formatEpisode,\n  availableDramas,\n  formatDramaName\n}) => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentPrompts, setCurrentPrompts] = useState([]);\n  const [loadingPrompts, setLoadingPrompts] = useState(false);\n  const [gameLog, setGameLog] = useState([]);\n  const [currentSentence, setCurrentSentence] = useState(null);\n  const [nextOptions, setNextOptions] = useState([]);\n  const [loadingNextOptions, setLoadingNextOptions] = useState(false);\n  const [gameError, setGameError] = useState(null);\n  const [videoUrl, setVideoUrl] = useState('');\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isExportingVideo, setIsExportingVideo] = useState(false);\n  const [clipUrls, setClipUrls] = useState([]);\n  const [isConfirmMode, setIsConfirmMode] = useState(false);\n  const [selectedDramas, setSelectedDramas] = useState(\n    availableDramas ? availableDramas.map(drama => drama.id) : []\n  );\n\n  // 处理剧集选择变化\n  const handleDramaChange = (dramaId) => {\n    if (selectedDramas.includes(dramaId)) {\n      // 如果已经选中，则从数组中移除\n      setSelectedDramas(selectedDramas.filter(id => id !== dramaId));\n    } else {\n      // 如果未选中，则添加到数组\n      setSelectedDramas([...selectedDramas, dramaId]);\n    }\n  };\n\n  // 选择/取消选择所有剧集\n  const toggleAllDramas = () => {\n    if (selectedDramas.length === availableDramas.length) {\n      // 如果已选择所有剧集，则取消选择所有\n      setSelectedDramas([]);\n    } else {\n      // 选择所有剧集\n      setSelectedDramas(availableDramas.map(drama => drama.id));\n    }\n  };\n\n  // 获取随机提示句子\n  const fetchRandomPrompts = async () => {\n    if (selectedDramas.length === 0) {\n      setGameError('请至少选择一个剧集');\n      return;\n    }\n    \n    setLoadingPrompts(true);\n    setGameError(null);\n    \n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/random_sentences`, {\n        params: {\n          count: 8,\n          drama_ids: selectedDramas.join(',')\n        }\n      });\n      \n      if (response.data && response.data.results) {\n        setCurrentPrompts(response.data.results);\n      } else {\n        setGameError('获取随机句子失败');\n      }\n    } catch (error) {\n      console.error('获取随机句子错误:', error);\n      setGameError('无法获取随机句子');\n    } finally {\n      setLoadingPrompts(false);\n    }\n  };\n\n  // 刷新随机提示\n  const refreshRandomPrompts = () => {\n    if (apiStatus === 'connected' && !loadingPrompts) {\n      fetchRandomPrompts();\n    }\n  };\n\n  // 生成视频片段\n  const generateVideoClip = async (subtitle) => {\n    setIsVideoLoading(true);\n    setVideoUrl('');\n    setGameError(null);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/generate_clip`, {\n        drama_id: subtitle.drama_id,\n        episode: subtitle.episode,\n        start_time: subtitle.start_seconds,\n        end_time: subtitle.end_seconds,\n        context_seconds: 2\n      });\n\n      if (response.data && response.data.clip_url) {\n        const clipUrl = `${API_BASE_URL}${response.data.clip_url}`;\n        setVideoUrl(clipUrl);\n        return clipUrl;\n      } else {\n        setGameError('生成视频片段失败');\n        return null;\n      }\n    } catch (error) {\n      console.error('生成视频片段出错:', error);\n      setGameError('视频服务出现错误，请确保视频文件存在且可访问');\n      return null;\n    } finally {\n      setIsVideoLoading(false);\n    }\n  };\n\n  // 选择开始句子\n  const selectStartSentence = (prompt) => {\n    setSelectedOption(prompt);\n    setIsConfirmMode(true);\n    generateVideoClip(prompt);\n  };\n\n  // 确认选择开始句子\n  const confirmStartSentence = () => {\n    const sentence = selectedOption;\n    if (!sentence) return;\n    \n    setCurrentSentence(sentence);\n    setGameLog([{...sentence, step: 1, clipUrl: videoUrl}]);\n    setClipUrls([...clipUrls, videoUrl]);\n    setGameStarted(true);\n    fetchRhymingOptions(sentence.text);\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n  };\n\n  // 取消选择\n  const cancelSelection = () => {\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n    setVideoUrl('');\n  };\n  \n  // 选择下一个句子\n  const selectNextSentence = (option) => {\n    setSelectedOption(option);\n    setIsConfirmMode(true);\n    generateVideoClip(option);\n  };\n\n  // 确认选择下一个句子\n  const confirmNextSentence = () => {\n    const sentence = selectedOption;\n    if (!sentence) return;\n    \n    setCurrentSentence(sentence);\n    setGameLog([...gameLog, {...sentence, step: gameLog.length + 1, clipUrl: videoUrl}]);\n    setClipUrls([...clipUrls, videoUrl]);\n    fetchRhymingOptions(sentence.text);\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n  };\n\n  // 查找韵脚匹配的选项\n  const fetchRhymingOptions = async (text) => {\n    if (!text) return;\n    \n    setLoadingNextOptions(true);\n    setGameError(null);\n    \n    try {\n      // 确保有选择的剧集\n      if (selectedDramas.length === 0) {\n        setGameError('请至少选择一个剧集');\n        setLoadingNextOptions(false);\n        return;\n      }\n      \n      const response = await axios.get(`${API_BASE_URL}/api/rhyming_sentences`, {\n        params: {\n          text: text,\n          min_length: 3,\n          max_length: 20,\n          limit: 8,\n          drama_ids: selectedDramas.join(',')\n        }\n      });\n      \n      if (response.data && response.data.results) {\n        setNextOptions(response.data.results);\n      } else {\n        setGameError('获取押韵选项失败');\n      }\n    } catch (error) {\n      console.error('获取押韵选项错误:', error);\n      setGameError('无法获取押韵选项');\n    } finally {\n      setLoadingNextOptions(false);\n    }\n  };\n\n  // 获取最后一个有效字符（排除语气词）\n  const getLastValidChar = (text) => {\n    if (!text || text.length === 0) return null;\n    \n    // 排除常见语气词\n    const cleanText = text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/, '');\n    return cleanText.length > 0 ? cleanText[cleanText.length - 1] : null;\n  };\n\n  // 刷新下一步选项\n  const refreshNextOptions = () => {\n    if (currentSentence && !loadingNextOptions) {\n      fetchRhymingOptions(currentSentence.text);\n    }\n  };\n\n  // 回到上一步\n  const goBackOneStep = () => {\n    if (gameLog.length <= 1) {\n      // 只有一步，回到选择开始句子\n      setGameStarted(false);\n      setGameLog([]);\n      setCurrentSentence(null);\n      setNextOptions([]);\n      setClipUrls([]);\n      setVideoUrl('');\n      fetchRandomPrompts();\n    } else {\n      // 移除最后一步\n      const newLog = [...gameLog];\n      newLog.pop();\n      setGameLog(newLog);\n      \n      // 更新当前句子和视频\n      const prevSentence = newLog[newLog.length - 1];\n      setCurrentSentence(prevSentence);\n      \n      // 更新剪辑URL列表\n      const newClipUrls = [...clipUrls];\n      newClipUrls.pop();\n      setClipUrls(newClipUrls);\n      \n      // 重新获取选项\n      fetchRhymingOptions(prevSentence.text);\n    }\n  };\n\n  // 合并视频并导出\n  const exportMergedVideo = async () => {\n    if (clipUrls.length === 0) return;\n    \n    setIsExportingVideo(true);\n    setGameError(null);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/merge_clips`, {\n        clip_urls: clipUrls\n      });\n      \n      if (response.data && response.data.merged_url) {\n        const mergedVideoUrl = `${API_BASE_URL}${response.data.merged_url}`;\n        \n        // 创建下载链接并强制触发下载\n        const link = document.createElement('a');\n        link.href = mergedVideoUrl;\n        link.download = '押韵视频.mp4';\n        link.target = '_blank';\n        document.body.appendChild(link); // 必须添加到DOM中\n        link.click();\n        setTimeout(() => {\n          document.body.removeChild(link); // 清理DOM\n        }, 100);\n        \n        console.log('视频合并成功，已触发下载');\n      } else {\n        setGameError('视频合并失败: ' + (response.data.error || '未知错误'));\n      }\n    } catch (error) {\n      console.error('视频合并错误:', error);\n      setGameError('视频合并服务出错: ' + (error.response?.data?.error || error.message));\n    } finally {\n      setIsExportingVideo(false);\n    }\n  };\n\n  // 开始新游戏\n  const startNewGame = () => {\n    setGameLog([]);\n    fetchRandomPrompts();\n    setGameStarted(false);\n    setCurrentSentence(null);\n    setNextOptions([]);\n    setClipUrls([]);\n    setVideoUrl('');\n    setSelectedOption(null);\n    setIsConfirmMode(false);\n  };\n\n  // 初始加载时获取随机提示\n  useEffect(() => {\n    if (apiStatus === 'connected') {\n      fetchRandomPrompts();\n    }\n  }, [apiStatus]);\n\n  return (\n    <div className=\"chain-game-container\">\n      <div className=\"drama-selector\">\n        <div className=\"drama-selector-header\">\n          <h3>选择剧集</h3>\n          <button \n            type=\"button\" \n            className=\"toggle-all-button\"\n            onClick={toggleAllDramas}\n          >\n            {selectedDramas.length === availableDramas.length ? '取消全选' : '全选'}\n          </button>\n        </div>\n        <div className=\"drama-checkbox-container\">\n          {availableDramas.map(drama => (\n            <div className=\"drama-checkbox\" key={drama.id}>\n              <input\n                type=\"checkbox\"\n                id={`rhyme-drama-${drama.id}`}\n                checked={selectedDramas.includes(drama.id)}\n                onChange={() => handleDramaChange(drama.id)}\n              />\n              <label htmlFor={`rhyme-drama-${drama.id}`}>\n                {formatDramaName(drama)}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"game-controls\">\n        <button \n          onClick={startNewGame}\n          className=\"new-game-btn\"\n          disabled={apiStatus !== 'connected'}\n        >\n          新游戏\n        </button>\n        {gameStarted && (\n          <button \n            onClick={goBackOneStep}\n            className=\"back-btn\"\n            disabled={gameLog.length === 0}\n          >\n            上一步\n          </button>\n        )}\n        {clipUrls.length > 1 && (\n          <button\n            onClick={exportMergedVideo}\n            className=\"export-btn\"\n            disabled={isExportingVideo}\n          >\n            {isExportingVideo ? '导出中...' : '导出押韵视频'}\n          </button>\n        )}\n      </div>\n      \n      {gameError && <div className=\"error-message\">{gameError}</div>}\n      \n      <div className=\"game-content\">\n        {/* 左侧：候选词区域 */}\n        <div className=\"game-candidates\">\n          {!gameStarted ? (\n            <div className=\"start-game-section\">\n              <div className=\"section-header\">\n                <h2>选择开始句子</h2>\n                <button \n                  onClick={refreshRandomPrompts}\n                  className=\"refresh-btn\"\n                  disabled={loadingPrompts || apiStatus !== 'connected'}\n                >\n                  换一批\n                </button>\n              </div>\n              \n              {loadingPrompts ? (\n                <div className=\"loading\">加载提示句子中...</div>\n              ) : (\n                <ul className=\"prompts-list\">\n                  {currentPrompts.map((prompt, index) => (\n                    <li \n                      key={index} \n                      onClick={() => selectStartSentence(prompt)}\n                      className={selectedOption === prompt ? 'prompt-item selected' : 'prompt-item'}\n                    >\n                      <div className=\"prompt-text\">{prompt.text}</div>\n                      <div className=\"prompt-info\">\n                        <span className=\"drama-name\">{formatDramaName({id: prompt.drama_id})}</span>\n                        <span className=\"episode\">{formatEpisode(prompt.episode)}</span>\n                        <span className=\"time\">{formatTime(prompt.start_seconds)}</span>\n                        <span className={`sentence-type ${analyzeSentenceType(prompt.text)}`}>{analyzeSentenceType(prompt.text)}</span>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              )}\n              \n              {currentPrompts.length === 0 && !loadingPrompts && (\n                <div className=\"empty-prompts\">\n                  <p>没有可用的提示句子</p>\n                  <button onClick={refreshRandomPrompts}>重新获取</button>\n                </div>\n              )}\n            </div>\n          ) : (\n            <>\n              <div className=\"current-section\">\n                <h2>当前句子</h2>\n                <div className=\"current-sentence\">\n                  <div className=\"current-text\">{currentSentence?.text}</div>\n                  <div className=\"current-info\">\n                    <span className=\"drama-name\">{formatDramaName({id: currentSentence?.drama_id})}</span>\n                    <span className=\"episode\">{formatEpisode(currentSentence?.episode)}</span>\n                    <span className=\"time\">{formatTime(currentSentence?.start_seconds)}</span>\n                  </div>\n                  <div className=\"next-hint\">\n                    下一句需与此句韵脚相同\n                  </div>\n                </div>\n              </div>\n                \n              <div className=\"next-options-section\">\n                <div className=\"section-header\">\n                  <h2>押韵选项</h2>\n                  <button \n                    onClick={refreshNextOptions}\n                    className=\"refresh-btn\"\n                    disabled={loadingNextOptions}\n                  >\n                    换一批\n                  </button>\n                </div>\n                \n                {loadingNextOptions ? (\n                  <div className=\"loading\">查找押韵句子中...</div>\n                ) : (\n                  <ul className=\"options-list\">\n                    {nextOptions.map((option, index) => (\n                      <li \n                        key={index}\n                        onClick={() => selectNextSentence(option)}\n                        className={selectedOption === option ? 'option-item selected' : 'option-item'}\n                      >\n                        <div className=\"option-text\">{option.text}</div>\n                        <div className=\"option-info\">\n                          <span className=\"drama-name\">{formatDramaName({id: option.drama_id})}</span>\n                          <span className=\"episode\">{formatEpisode(option.episode)}</span>\n                          <span className=\"time\">{formatTime(option.start_seconds)}</span>\n                          <span className={`sentence-type ${analyzeSentenceType(option.text)}`}>{analyzeSentenceType(option.text)}</span>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n                {nextOptions.length === 0 && !loadingNextOptions && (\n                  <div className=\"no-options\">\n                    <p>没有找到合适的押韵句子</p>\n                    <button onClick={startNewGame}>重新开始</button>\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n\n          {/* 押韵记录 */}\n          <div className=\"game-log-section\">\n            <h2>押韵记录</h2>\n            {gameLog.length > 0 ? (\n              <ol className=\"game-log-list\">\n                {gameLog.map((log, index) => (\n                  <li key={index} className=\"log-item\">\n                    <div className=\"log-text\">{log.text}</div>\n                    <div className=\"log-info\">\n                      <span className=\"drama-name\">{formatDramaName({id: log.drama_id})}</span>\n                      <span className=\"episode\">{formatEpisode(log.episode)}</span>\n                      <span className=\"time\">{formatTime(log.start_seconds)}</span>\n                      {log.clipUrl && (\n                        <span className=\"clip-info\">\n                          <i className=\"video-icon\">🎬</i>\n                        </span>\n                      )}\n                    </div>\n                  </li>\n                ))}\n              </ol>\n            ) : (\n              <div className=\"empty-log\">尚未开始游戏</div>\n            )}\n          </div>\n        </div>\n\n        {/* 右侧：视频预览区域 */}\n        <div className=\"game-video-preview\">\n          {isConfirmMode && (\n            <div className=\"confirm-section\">\n              <div className=\"selected-sentence\">\n                <div className=\"selected-text\">{selectedOption?.text}</div>\n                <div className=\"selected-info\">\n                  <span className=\"drama-name\">{formatDramaName({id: selectedOption?.drama_id})}</span>\n                  <span className=\"episode\">{formatEpisode(selectedOption?.episode)}</span>\n                  <span className=\"time\">{formatTime(selectedOption?.start_seconds)}</span>\n                </div>\n              </div>\n              \n              <div className=\"video-preview\">\n                {isVideoLoading ? (\n                  <div className=\"loading-video\">生成视频片段中，请稍候...</div>\n                ) : videoUrl ? (\n                  <video \n                    controls \n                    autoPlay \n                    className=\"video-element\"\n                    src={videoUrl}\n                  />\n                ) : (\n                  <div className=\"video-placeholder\">准备生成视频片段...</div>\n                )}\n              </div>\n              \n              <div className=\"confirm-buttons\">\n                <button \n                  className=\"confirm-btn\"\n                  onClick={gameStarted ? confirmNextSentence : confirmStartSentence}\n                  disabled={isVideoLoading || !videoUrl}\n                >\n                  确认选择\n                </button>\n                <button \n                  className=\"cancel-btn\"\n                  onClick={cancelSelection}\n                >\n                  取消选择\n                </button>\n              </div>\n            </div>\n          )}\n          {!isConfirmMode && (\n            <div className=\"video-section\">\n              <h2>视频预览</h2>\n              {isVideoLoading ? (\n                <div className=\"loading-video\">生成视频片段中，请稍候...</div>\n              ) : videoUrl ? (\n                <video \n                  controls \n                  autoPlay \n                  className=\"video-element\"\n                  src={videoUrl}\n                />\n              ) : (\n                <div className=\"video-placeholder large\">\n                  <div className=\"placeholder-text\">\n                    <p>请从左侧选择一个句子</p>\n                    <p>选择后将在此处预览视频</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 分析句子类型 - 全局辅助函数\nconst analyzeSentenceType = (text) => {\n  if (!text) return '普通句';\n  \n  // 判断是否为问句\n  if (text.includes('?') || text.includes('？') || text.includes('吗') || text.includes('呢')) {\n    return '疑问句';\n  }\n  \n  // 判断是否为命令句\n  const commandWords = ['去', '来', '给我', '快', '立刻', '马上', '传'];\n  if (commandWords.some(word => text.includes(word))) {\n    return '命令句';\n  }\n  \n  // 判断情感色彩\n  const positiveWords = ['好', '愿意', '可以', '是', '对', '喜欢', '爱', '高兴'];\n  const negativeWords = ['不', '没', '别', '莫', '拒绝', '难过', '恨', '讨厌'];\n  \n  if (positiveWords.some(word => text.includes(word))) {\n    return '积极句';\n  }\n  \n  if (negativeWords.some(word => text.includes(word))) {\n    return '消极句';\n  }\n  \n  return '普通句';\n};\n\n// 奇妙对话组件\nconst DialogueGamePage = ({ \n  API_BASE_URL, \n  apiStatus,\n  formatTime,\n  formatEpisode,\n  availableDramas,\n  formatDramaName\n}) => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentPrompts, setCurrentPrompts] = useState([]);\n  const [loadingPrompts, setLoadingPrompts] = useState(false);\n  const [gameLog, setGameLog] = useState([]);\n  const [currentSentence, setCurrentSentence] = useState(null);\n  const [nextOptions, setNextOptions] = useState([]);\n  const [loadingNextOptions, setLoadingNextOptions] = useState(false);\n  const [gameError, setGameError] = useState(null);\n  const [videoUrl, setVideoUrl] = useState('');\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isExportingVideo, setIsExportingVideo] = useState(false);\n  const [clipUrls, setClipUrls] = useState([]);\n  const [isConfirmMode, setIsConfirmMode] = useState(false);\n  const [selectedDramas, setSelectedDramas] = useState(\n    availableDramas ? availableDramas.map(drama => drama.id) : []\n  );\n\n  // 处理剧集选择变化\n  const handleDramaChange = (dramaId) => {\n    if (selectedDramas.includes(dramaId)) {\n      // 如果已经选中，则从数组中移除\n      setSelectedDramas(selectedDramas.filter(id => id !== dramaId));\n    } else {\n      // 如果未选中，则添加到数组\n      setSelectedDramas([...selectedDramas, dramaId]);\n    }\n  };\n\n  // 选择/取消选择所有剧集\n  const toggleAllDramas = () => {\n    if (selectedDramas.length === availableDramas.length) {\n      // 如果已选择所有剧集，则取消选择所有\n      setSelectedDramas([]);\n    } else {\n      // 选择所有剧集\n      setSelectedDramas(availableDramas.map(drama => drama.id));\n    }\n  };\n\n  // 获取随机提示句子\n  const fetchRandomPrompts = async () => {\n    if (selectedDramas.length === 0) {\n      setGameError('请至少选择一个剧集');\n      return;\n    }\n    \n    setLoadingPrompts(true);\n    setGameError(null);\n    \n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/random_sentences`, {\n        params: {\n          count: 8,\n          drama_ids: selectedDramas.join(',')\n        }\n      });\n      \n      if (response.data && response.data.results) {\n        setCurrentPrompts(response.data.results);\n      } else {\n        setGameError('获取随机句子失败');\n      }\n    } catch (error) {\n      console.error('获取随机句子错误:', error);\n      setGameError('无法获取随机句子');\n    } finally {\n      setLoadingPrompts(false);\n    }\n  };\n\n  // 刷新随机提示\n  const refreshRandomPrompts = () => {\n    if (apiStatus === 'connected' && !loadingPrompts) {\n      fetchRandomPrompts();\n    }\n  };\n\n  // 生成视频片段\n  const generateVideoClip = async (subtitle) => {\n    setIsVideoLoading(true);\n    setVideoUrl('');\n    setGameError(null);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/generate_clip`, {\n        drama_id: subtitle.drama_id,\n        episode: subtitle.episode,\n        start_time: subtitle.start_seconds,\n        end_time: subtitle.end_seconds,\n        context_seconds: 2\n      });\n\n      if (response.data && response.data.clip_url) {\n        const clipUrl = `${API_BASE_URL}${response.data.clip_url}`;\n        setVideoUrl(clipUrl);\n        return clipUrl;\n      } else {\n        setGameError('生成视频片段失败');\n        return null;\n      }\n    } catch (error) {\n      console.error('生成视频片段出错:', error);\n      setGameError('视频服务出现错误，请确保视频文件存在且可访问');\n      return null;\n    } finally {\n      setIsVideoLoading(false);\n    }\n  };\n\n  // 选择开始句子\n  const selectStartSentence = (prompt) => {\n    setSelectedOption(prompt);\n    setIsConfirmMode(true);\n    generateVideoClip(prompt);\n  };\n\n  // 确认选择开始句子\n  const confirmStartSentence = () => {\n    const sentence = selectedOption;\n    if (!sentence) return;\n    \n    setCurrentSentence(sentence);\n    setGameLog([{...sentence, step: 1, clipUrl: videoUrl}]);\n    setClipUrls([...clipUrls, videoUrl]);\n    setGameStarted(true);\n    fetchDialogueResponses(sentence);\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n  };\n\n  // 取消选择\n  const cancelSelection = () => {\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n    setVideoUrl('');\n  };\n  \n  // 选择下一个句子\n  const selectNextSentence = (option) => {\n    setSelectedOption(option);\n    setIsConfirmMode(true);\n    generateVideoClip(option);\n  };\n\n  // 确认选择下一个句子\n  const confirmNextSentence = () => {\n    const sentence = selectedOption;\n    if (!sentence) return;\n    \n    setCurrentSentence(sentence);\n    setGameLog([...gameLog, {...sentence, step: gameLog.length + 1, clipUrl: videoUrl}]);\n    setClipUrls([...clipUrls, videoUrl]);\n    fetchDialogueResponses(sentence);\n    setIsConfirmMode(false);\n    setSelectedOption(null);\n  };\n\n  // 查找对话回应\n  const fetchDialogueResponses = async (sentence) => {\n    if (!sentence) return;\n    \n    setLoadingNextOptions(true);\n    setGameError(null);\n    \n    try {\n      // 确保有选择的剧集\n      if (selectedDramas.length === 0) {\n        setGameError('请至少选择一个剧集');\n        setLoadingNextOptions(false);\n        return;\n      }\n      \n      const response = await axios.post(`${API_BASE_URL}/api/dialogue_responses`, {\n        sentence_text: sentence.text,\n        drama_id: sentence.drama_id,\n        episode: sentence.episode,\n        drama_ids: selectedDramas.join(',')\n      });\n      \n      if (response.data && response.data.results) {\n        setNextOptions(response.data.results);\n      } else {\n        setGameError('获取对话回应失败');\n      }\n    } catch (error) {\n      console.error('获取对话回应错误:', error);\n      setGameError('无法获取对话回应');\n    } finally {\n      setLoadingNextOptions(false);\n    }\n  };\n\n  // 获取最后一个有效字符（排除语气词）\n  const getLastValidChar = (text) => {\n    if (!text || text.length === 0) return null;\n    \n    // 排除常见语气词\n    const cleanText = text.replace(/[啊呢吗吧呀嘛哦哎嗯呐呵呦诶哈哟]$/, '');\n    return cleanText.length > 0 ? cleanText[cleanText.length - 1] : null;\n  };\n\n  // 刷新下一步选项\n  const refreshNextOptions = () => {\n    if (currentSentence && !loadingNextOptions) {\n      fetchDialogueResponses(currentSentence);\n    }\n  };\n\n  // 回到上一步\n  const goBackOneStep = () => {\n    if (gameLog.length <= 1) {\n      // 只有一步，回到选择开始句子\n      setGameStarted(false);\n      setGameLog([]);\n      setCurrentSentence(null);\n      setNextOptions([]);\n      setClipUrls([]);\n      setVideoUrl('');\n      fetchRandomPrompts();\n    } else {\n      // 移除最后一步\n      const newLog = [...gameLog];\n      newLog.pop();\n      setGameLog(newLog);\n      \n      // 更新当前句子和视频\n      const prevSentence = newLog[newLog.length - 1];\n      setCurrentSentence(prevSentence);\n      \n      // 更新剪辑URL列表\n      const newClipUrls = [...clipUrls];\n      newClipUrls.pop();\n      setClipUrls(newClipUrls);\n      \n      // 重新获取选项\n      fetchDialogueResponses(prevSentence);\n    }\n  };\n\n  // 合并视频并导出\n  const exportMergedVideo = async () => {\n    if (clipUrls.length === 0) return;\n    \n    setIsExportingVideo(true);\n    setGameError(null);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/merge_clips`, {\n        clip_urls: clipUrls\n      });\n      \n      if (response.data && response.data.merged_url) {\n        const mergedVideoUrl = `${API_BASE_URL}${response.data.merged_url}`;\n        \n        // 创建下载链接并强制触发下载\n        const link = document.createElement('a');\n        link.href = mergedVideoUrl;\n        link.download = '对话视频.mp4';\n        link.target = '_blank';\n        document.body.appendChild(link); // 必须添加到DOM中\n        link.click();\n        setTimeout(() => {\n          document.body.removeChild(link); // 清理DOM\n        }, 100);\n        \n        console.log('视频合并成功，已触发下载');\n      } else {\n        setGameError('视频合并失败: ' + (response.data.error || '未知错误'));\n      }\n    } catch (error) {\n      console.error('视频合并错误:', error);\n      setGameError('视频合并服务出错: ' + (error.response?.data?.error || error.message));\n    } finally {\n      setIsExportingVideo(false);\n    }\n  };\n\n  // 开始新游戏\n  const startNewGame = () => {\n    setGameLog([]);\n    fetchRandomPrompts();\n    setGameStarted(false);\n    setCurrentSentence(null);\n    setNextOptions([]);\n    setClipUrls([]);\n    setVideoUrl('');\n    setSelectedOption(null);\n    setIsConfirmMode(false);\n  };\n\n  // 初始加载时获取随机提示\n  useEffect(() => {\n    if (apiStatus === 'connected') {\n      fetchRandomPrompts();\n    }\n  }, [apiStatus]);\n\n  return (\n    <div className=\"chain-game-container\">\n      <div className=\"drama-selector\">\n        <div className=\"drama-selector-header\">\n          <h3>选择剧集</h3>\n          <button \n            type=\"button\" \n            className=\"toggle-all-button\"\n            onClick={toggleAllDramas}\n          >\n            {selectedDramas.length === availableDramas.length ? '取消全选' : '全选'}\n          </button>\n        </div>\n        <div className=\"drama-checkbox-container\">\n          {availableDramas.map(drama => (\n            <div className=\"drama-checkbox\" key={drama.id}>\n              <input\n                type=\"checkbox\"\n                id={`dialogue-drama-${drama.id}`}\n                checked={selectedDramas.includes(drama.id)}\n                onChange={() => handleDramaChange(drama.id)}\n              />\n              <label htmlFor={`dialogue-drama-${drama.id}`}>\n                {formatDramaName(drama)}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"game-controls\">\n        <button \n          onClick={startNewGame}\n          className=\"new-game-btn\"\n          disabled={apiStatus !== 'connected'}\n        >\n          新游戏\n        </button>\n        {gameStarted && (\n          <button \n            onClick={goBackOneStep}\n            className=\"back-btn\"\n            disabled={gameLog.length === 0}\n          >\n            上一步\n          </button>\n        )}\n        {clipUrls.length > 1 && (\n          <button\n            onClick={exportMergedVideo}\n            className=\"export-btn\"\n            disabled={isExportingVideo}\n          >\n            {isExportingVideo ? '导出中...' : '导出对话视频'}\n          </button>\n        )}\n      </div>\n      \n      {gameError && <div className=\"error-message\">{gameError}</div>}\n      \n      <div className=\"game-content\">\n        {/* 左侧：候选词区域 */}\n        <div className=\"game-candidates\">\n          {!gameStarted ? (\n            <div className=\"start-game-section\">\n              <div className=\"section-header\">\n                <h2>选择开始句子</h2>\n                <button \n                  onClick={refreshRandomPrompts}\n                  className=\"refresh-btn\"\n                  disabled={loadingPrompts || apiStatus !== 'connected'}\n                >\n                  换一批\n                </button>\n              </div>\n              \n              {loadingPrompts ? (\n                <div className=\"loading\">加载提示句子中...</div>\n              ) : (\n                <ul className=\"prompts-list\">\n                  {currentPrompts.map((prompt, index) => (\n                    <li \n                      key={index} \n                      onClick={() => selectStartSentence(prompt)}\n                      className={selectedOption === prompt ? 'prompt-item selected' : 'prompt-item'}\n                    >\n                      <div className=\"prompt-text\">{prompt.text}</div>\n                      <div className=\"prompt-info\">\n                        <span className=\"drama-name\">{formatDramaName({id: prompt.drama_id})}</span>\n                        <span className=\"episode\">{formatEpisode(prompt.episode)}</span>\n                        <span className=\"time\">{formatTime(prompt.start_seconds)}</span>\n                        <span className={`sentence-type ${analyzeSentenceType(prompt.text)}`}>{analyzeSentenceType(prompt.text)}</span>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              )}\n              \n              {currentPrompts.length === 0 && !loadingPrompts && (\n                <div className=\"empty-prompts\">\n                  <p>没有可用的提示句子</p>\n                  <button onClick={refreshRandomPrompts}>重新获取</button>\n                </div>\n              )}\n            </div>\n          ) : (\n            <>\n              <div className=\"current-section\">\n                <h2>当前句子</h2>\n                <div className=\"current-sentence\">\n                  <div className=\"current-text\">{currentSentence?.text}</div>\n                  <div className=\"current-info\">\n                    <span className=\"drama-name\">{formatDramaName({id: currentSentence?.drama_id})}</span>\n                    <span className=\"episode\">{formatEpisode(currentSentence?.episode)}</span>\n                    <span className=\"time\">{formatTime(currentSentence?.start_seconds)}</span>\n                  </div>\n                  <div className=\"next-hint\">\n                    查找适合的回应句子\n                  </div>\n                </div>\n              </div>\n                \n              <div className=\"next-options-section\">\n                <div className=\"section-header\">\n                  <h2>回应选项</h2>\n                  <button \n                    onClick={refreshNextOptions}\n                    className=\"refresh-btn\"\n                    disabled={loadingNextOptions}\n                  >\n                    换一批\n                  </button>\n                </div>\n                \n                {loadingNextOptions ? (\n                  <div className=\"loading\">查找回应句子中...</div>\n                ) : (\n                  <ul className=\"options-list\">\n                    {nextOptions.map((option, index) => (\n                      <li \n                        key={index}\n                        onClick={() => selectNextSentence(option)}\n                        className={selectedOption === option ? 'option-item selected' : 'option-item'}\n                      >\n                        <div className=\"option-text\">{option.text}</div>\n                        <div className=\"option-info\">\n                          <span className=\"drama-name\">{formatDramaName({id: option.drama_id})}</span>\n                          <span className=\"episode\">{formatEpisode(option.episode)}</span>\n                          <span className=\"time\">{formatTime(option.start_seconds)}</span>\n                          <span className={`sentence-type ${analyzeSentenceType(option.text)}`}>{analyzeSentenceType(option.text)}</span>\n                          {option.score && (\n                            <span className=\"match-score\">\n                              匹配度: {Math.round(option.score * 100)}%\n                            </span>\n                          )}\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n                {nextOptions.length === 0 && !loadingNextOptions && (\n                  <div className=\"no-options\">\n                    <p>没有找到合适的回应句子</p>\n                    <button onClick={startNewGame}>重新开始</button>\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n\n          {/* 对话记录 */}\n          <div className=\"game-log-section\">\n            <h2>对话记录</h2>\n            {gameLog.length > 0 ? (\n              <ol className=\"game-log-list\">\n                {gameLog.map((log, index) => (\n                  <li key={index} className=\"log-item\">\n                    <div className=\"log-text\">{log.text}</div>\n                    <div className=\"log-info\">\n                      <span className=\"drama-name\">{formatDramaName({id: log.drama_id})}</span>\n                      <span className=\"episode\">{formatEpisode(log.episode)}</span>\n                      <span className=\"time\">{formatTime(log.start_seconds)}</span>\n                      {log.clipUrl && (\n                        <span className=\"clip-info\">\n                          <i className=\"video-icon\">🎬</i>\n                        </span>\n                      )}\n                    </div>\n                  </li>\n                ))}\n              </ol>\n            ) : (\n              <div className=\"empty-log\">尚未开始游戏</div>\n            )}\n          </div>\n        </div>\n\n        {/* 右侧：视频预览区域 */}\n        <div className=\"game-video-preview\">\n          {isConfirmMode && (\n            <div className=\"confirm-section\">\n              <div className=\"selected-sentence\">\n                <div className=\"selected-text\">{selectedOption?.text}</div>\n                <div className=\"selected-info\">\n                  <span className=\"drama-name\">{formatDramaName({id: selectedOption?.drama_id})}</span>\n                  <span className=\"episode\">{formatEpisode(selectedOption?.episode)}</span>\n                  <span className=\"time\">{formatTime(selectedOption?.start_seconds)}</span>\n                </div>\n              </div>\n              \n              <div className=\"video-preview\">\n                {isVideoLoading ? (\n                  <div className=\"loading-video\">生成视频片段中，请稍候...</div>\n                ) : videoUrl ? (\n                  <video \n                    controls \n                    autoPlay \n                    className=\"video-element\"\n                    src={videoUrl}\n                  />\n                ) : (\n                  <div className=\"video-placeholder\">准备生成视频片段...</div>\n                )}\n              </div>\n              \n              <div className=\"confirm-buttons\">\n                <button \n                  className=\"confirm-btn\"\n                  onClick={gameStarted ? confirmNextSentence : confirmStartSentence}\n                  disabled={isVideoLoading || !videoUrl}\n                >\n                  确认选择\n                </button>\n                <button \n                  className=\"cancel-btn\"\n                  onClick={cancelSelection}\n                >\n                  取消选择\n                </button>\n              </div>\n            </div>\n          )}\n          {!isConfirmMode && (\n            <div className=\"video-section\">\n              <h2>视频预览</h2>\n              {isVideoLoading ? (\n                <div className=\"loading-video\">生成视频片段中，请稍候...</div>\n              ) : videoUrl ? (\n                <video \n                  controls \n                  autoPlay \n                  className=\"video-element\"\n                  src={videoUrl}\n                />\n              ) : (\n                <div className=\"video-placeholder large\">\n                  <div className=\"placeholder-text\">\n                    <p>请从左侧选择一个句子</p>\n                    <p>选择后将在此处预览视频</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  const API_BASE_URL = 'http://localhost:8089';\n  \n  // 搜索页面状态\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [apiStatus, setApiStatus] = useState('unknown');\n  const [error, setError] = useState(null);\n  const [selectedResult, setSelectedResult] = useState(null);\n  const [videoUrl, setVideoUrl] = useState('');\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState('search');\n  \n  // 剧集相关状态\n  const [availableDramas, setAvailableDramas] = useState([]);\n  const [selectedDramas, setSelectedDramas] = useState([]);\n  const [dramaStats, setDramaStats] = useState({});\n\n  useEffect(() => {\n    checkApiStatus();\n  }, []);\n  \n  // 获取API状态并加载可用剧集\n  const checkApiStatus = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/status`);\n      if (response.data && response.data.status === 'ok') {\n        setApiStatus('connected');\n        \n        // 保存剧集信息\n        if (response.data.dramas) {\n          setAvailableDramas(response.data.dramas);\n          // 默认选择所有可用剧集\n          setSelectedDramas(response.data.dramas.map(drama => drama.id));\n        }\n        \n        // 保存剧集统计信息\n        if (response.data.drama_stats) {\n          setDramaStats(response.data.drama_stats);\n        }\n      } else {\n        setApiStatus('error');\n        setError('API服务状态异常');\n      }\n    } catch (error) {\n      console.error('API状态检查错误:', error);\n      setApiStatus('disconnected');\n      setError('无法连接到API服务，请确保服务器已启动');\n    }\n  };\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSearchResults([]);\n    setSelectedResult(null);\n    setVideoUrl('');\n    \n    if (!query.trim()) {\n      setError('请输入搜索关键词');\n      setLoading(false);\n      return;\n    }\n    \n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/search`, {\n        params: {\n          query: query,\n          drama_ids: selectedDramas\n        }\n      });\n      \n      if (response.data && response.data.results) {\n        setSearchResults(response.data.results);\n        if (response.data.results.length === 0) {\n          setError('没有找到匹配的结果');\n        }\n      } else {\n        setError('搜索失败');\n      }\n    } catch (error) {\n      console.error('搜索错误:', error);\n      setError('搜索请求失败，请确保API服务正常运行');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGenerateClip = async (result) => {\n    if (isVideoLoading) return;\n    \n    setSelectedResult(result);\n    setIsVideoLoading(true);\n    setVideoUrl('');\n    setError(null);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/generate_clip`, {\n        drama_id: result.drama_id,\n        episode: result.episode,\n        start_time: result.start_seconds,\n        end_time: result.end_seconds,\n        context_seconds: 2\n      });\n      \n      if (response.data && response.data.clip_url) {\n        const url = `${API_BASE_URL}${response.data.clip_url}`;\n        setVideoUrl(url);\n      } else {\n        setError('无法生成视频片段');\n      }\n    } catch (error) {\n      console.error('生成视频片段失败:', error);\n      setError('请求失败，请检查网络连接');\n    } finally {\n      setIsVideoLoading(false);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const formatEpisode = (episode) => {\n    // 从集数名称中提取数字\n    const match = episode.match(/\\d+/);\n    if (match) {\n      return `第${match[0]}集`;\n    }\n    return episode;\n  };\n \n  const formatDramaName = (drama) => {\n    // 根据drama_id获取剧名\n    if (!drama || !drama.id) return '未知剧集';\n    \n    // 如果传入的是完整drama对象，则直接返回名称\n    if (drama.name) return drama.name;\n    \n    // 否则在availableDramas中查找\n    const foundDrama = availableDramas.find(d => d.id === drama.id);\n    return foundDrama ? foundDrama.name : drama.id;\n  };\n\n  const highlightText = (text, query) => {\n    if (!query || !text) return text;\n    \n    // 简单的字符串替换，为匹配的文本添加高亮标签\n    const escapedQuery = query.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    const regex = new RegExp(escapedQuery, 'gi');\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  };\n\n  const switchPage = (page) => {\n    setCurrentPage(page);\n    setError(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>字幕搜索系统</h1>\n        \n        <div className=\"api-status\">\n          API服务状态: \n          {apiStatus === 'connected' ? (\n            <span className=\"status-connected\">已连接</span>\n          ) : apiStatus === 'disconnected' ? (\n            <span className=\"status-disconnected\">未连接</span>\n          ) : (\n            <span className=\"status-checking\">检查中...</span>\n          )}\n        </div>\n        \n        <nav className=\"main-nav\">\n          <ul>\n            <li className={currentPage === 'search' ? 'active' : ''}>\n              <button onClick={() => switchPage('search')}>字幕搜索</button>\n            </li>\n            <li className={currentPage === 'chain-game' ? 'active' : ''}>\n              <button onClick={() => switchPage('chain-game')}>字幕接龙</button>\n            </li>\n            <li className={currentPage === 'rhyme-game' ? 'active' : ''}>\n              <button onClick={() => switchPage('rhyme-game')}>字幕押韵</button>\n            </li>\n            <li className={currentPage === 'dialogue-game' ? 'active' : ''}>\n              <button onClick={() => switchPage('dialogue-game')}>奇妙对话</button>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      \n      <main className=\"App-main\">\n        {currentPage === 'search' && (\n          <SearchPage \n            API_BASE_URL={API_BASE_URL}\n            query={query}\n            setQuery={setQuery}\n            searchResults={searchResults}\n            setSearchResults={setSearchResults}\n            loading={loading}\n            setLoading={setLoading}\n            apiStatus={apiStatus}\n            error={error}\n            setError={setError}\n            selectedResult={selectedResult}\n            setSelectedResult={setSelectedResult}\n            videoUrl={videoUrl}\n            setVideoUrl={setVideoUrl}\n            isVideoLoading={isVideoLoading}\n            setIsVideoLoading={setIsVideoLoading}\n            handleSearch={handleSearch}\n            handleGenerateClip={handleGenerateClip}\n            formatTime={formatTime}\n            formatEpisode={formatEpisode}\n            highlightText={highlightText}\n            availableDramas={availableDramas}\n            selectedDramas={selectedDramas}\n            setSelectedDramas={setSelectedDramas}\n            formatDramaName={formatDramaName}\n          />\n        )}\n        \n        {currentPage === 'chain-game' && (\n          <ChainGamePage \n            API_BASE_URL={API_BASE_URL}\n            apiStatus={apiStatus}\n            formatTime={formatTime}\n            formatEpisode={formatEpisode}\n            availableDramas={availableDramas}\n            formatDramaName={formatDramaName}\n          />\n        )}\n        \n        {currentPage === 'rhyme-game' && (\n          <RhymeGamePage \n            API_BASE_URL={API_BASE_URL}\n            apiStatus={apiStatus}\n            formatTime={formatTime}\n            formatEpisode={formatEpisode}\n            availableDramas={availableDramas}\n            formatDramaName={formatDramaName}\n          />\n        )}\n        \n        {currentPage === 'dialogue-game' && (\n          <DialogueGamePage \n            API_BASE_URL={API_BASE_URL}\n            apiStatus={apiStatus}\n            formatTime={formatTime}\n            formatEpisode={formatEpisode}\n            availableDramas={availableDramas}\n            formatDramaName={formatDramaName}\n          />\n        )}\n      </main>\n      \n      <footer className=\"App-footer\">\n        <p>字幕搜索系统 &copy; 2023</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}